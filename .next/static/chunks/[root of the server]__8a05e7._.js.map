{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/websocket.ts"],"sourcesContent":["// Adapted from https://github.com/vercel/next.js/blob/canary/packages/next/src/client/dev/error-overlay/websocket.ts\n\nlet source: WebSocket;\nconst eventCallbacks: ((msg: WebSocketMessage) => void)[] = [];\n\n// TODO: add timeout again\n// let lastActivity = Date.now()\n\nfunction getSocketProtocol(assetPrefix: string): string {\n  let protocol = location.protocol;\n\n  try {\n    // assetPrefix is a url\n    protocol = new URL(assetPrefix).protocol;\n  } catch (_) {}\n\n  return protocol === \"http:\" ? \"ws\" : \"wss\";\n}\n\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\nexport function addMessageListener(cb: (msg: WebSocketMessage) => void) {\n  eventCallbacks.push(cb);\n}\n\nexport function sendMessage(data: any) {\n  if (!source || source.readyState !== source.OPEN) return;\n  return source.send(data);\n}\n\nexport type HMROptions = {\n  path: string;\n  assetPrefix: string;\n  timeout?: number;\n  log?: boolean;\n};\n\nexport function connectHMR(options: HMROptions) {\n  const { timeout = 5 * 1000 } = options;\n\n  function init() {\n    if (source) source.close();\n\n    console.log(\"[HMR] connecting...\");\n\n    function handleOnline() {\n      const connected = { type: \"turbopack-connected\" as const };\n      eventCallbacks.forEach((cb) => {\n        cb(connected);\n      });\n\n      if (options.log) console.log(\"[HMR] connected\");\n      // lastActivity = Date.now()\n    }\n\n    function handleMessage(event: MessageEvent) {\n      // lastActivity = Date.now()\n\n      const message = {\n        type: \"turbopack-message\" as const,\n        data: JSON.parse(event.data),\n      };\n      eventCallbacks.forEach((cb) => {\n        cb(message);\n      });\n    }\n\n    // let timer: NodeJS.Timeout\n\n    function handleDisconnect() {\n      source.close();\n      setTimeout(init, timeout);\n    }\n\n    const { hostname, port } = location;\n    const protocol = getSocketProtocol(options.assetPrefix || \"\");\n    const assetPrefix = options.assetPrefix.replace(/^\\/+/, \"\");\n\n    let url = `${protocol}://${hostname}:${port}${\n      assetPrefix ? `/${assetPrefix}` : \"\"\n    }`;\n\n    if (assetPrefix.startsWith(\"http\")) {\n      url = `${protocol}://${assetPrefix.split(\"://\")[1]}`;\n    }\n\n    source = new window.WebSocket(`${url}${options.path}`);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  init();\n}\n"],"names":[],"mappings":"AAAA,qHAAqH;;;;;;AAErH,IAAI;AACJ,MAAM,iBAAsD,EAAE;AAE9D,0BAA0B;AAC1B,gCAAgC;AAEhC,SAAS,kBAAkB,WAAmB;IAC5C,IAAI,WAAW,SAAS,QAAQ;IAEhC,IAAI;QACF,uBAAuB;QACvB,WAAW,IAAI,IAAI,aAAa,QAAQ;IAC1C,EAAE,OAAO,GAAG,CAAC;IAEb,OAAO,aAAa,UAAU,OAAO;AACvC;AAWO,SAAS,mBAAmB,EAAmC;IACpE,eAAe,IAAI,CAAC;AACtB;AAEO,SAAS,YAAY,IAAS;IACnC,IAAI,CAAC,UAAU,OAAO,UAAU,KAAK,OAAO,IAAI,EAAE;IAClD,OAAO,OAAO,IAAI,CAAC;AACrB;AASO,SAAS,WAAW,OAAmB;IAC5C,MAAM,EAAE,UAAU,IAAI,IAAI,EAAE,GAAG;IAE/B,SAAS;QACP,IAAI,QAAQ,OAAO,KAAK;QAExB,QAAQ,GAAG,CAAC;QAEZ,SAAS;YACP,MAAM,YAAY;gBAAE,MAAM;YAA+B;YACzD,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;YAEA,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG,CAAC;QAC7B,4BAA4B;QAC9B;QAEA,SAAS,cAAc,KAAmB;YACxC,4BAA4B;YAE5B,MAAM,UAAU;gBACd,MAAM;gBACN,MAAM,KAAK,KAAK,CAAC,MAAM,IAAI;YAC7B;YACA,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;QACF;QAEA,4BAA4B;QAE5B,SAAS;YACP,OAAO,KAAK;YACZ,WAAW,MAAM;QACnB;QAEA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG;QAC3B,MAAM,WAAW,kBAAkB,QAAQ,WAAW,IAAI;QAC1D,MAAM,cAAc,QAAQ,WAAW,CAAC,OAAO,CAAC,QAAQ;QAExD,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,SAAS,CAAC,EAAE,OACrC,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAClC;QAEF,IAAI,YAAY,UAAU,CAAC,SAAS;YAClC,MAAM,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;QACtD;QAEA,SAAS,IAAI,OAAO,SAAS,CAAC,GAAG,MAAM,QAAQ,IAAI,EAAE;QACrD,OAAO,MAAM,GAAG;QAChB,OAAO,OAAO,GAAG;QACjB,OAAO,SAAS,GAAG;IACrB;IAEA;AACF","ignoreList":[0]}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\nimport {\n  addMessageListener as turboSocketAddMessageListener,\n  sendMessage as turboSocketSendMessage,\n} from \"./websocket\";\ntype SendMessage = typeof import(\"./websocket\").sendMessage;\n\nexport type ClientOptions = {\n  addMessageListener: typeof import(\"./websocket\").addMessageListener;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  addMessageListener = turboSocketAddMessageListener,\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  sendMessage = turboSocketSendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkPath: ChunkPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  if (callback === undefined) {\n    callback = sendMessage;\n    sendMessage = turboSocketSendMessage;\n  }\n\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/chakra-next.tsx"],"sourcesContent":["import { Link as ChakraLink, LinkProps as ChakraLinkProps } from '@chakra-ui/react'\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link'\n\ninterface CNLinkProps extends ChakraLinkProps {\n  href: string\n  children: React.ReactNode\n  nextProps?: Omit<NextLinkProps, 'href'>\n}\n\nexport const CNLink = ({ href, nextProps, children, ...props }: CNLinkProps) => {\n  return (\n    <ChakraLink {...props} asChild>\n      <NextLink href={href} {...nextProps}>\n        {children}\n      </NextLink>\n    </ChakraLink>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;;AASO,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAoB;IACzE,qBACE,0JAAC,gLAAA,CAAA,OAAU;QAAE,GAAG,KAAK;QAAE,OAAO;kBAC5B,cAAA,0JAAC,wHAAA,CAAA,UAAQ;YAAC,MAAM;YAAO,GAAG,SAAS;sBAChC;;;;;;;;;;;AAIT;KARa"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/configs/site.config.ts"],"sourcesContent":["export const siteConfig = {\n  profile: {\n    name: 'Jasani Zeel',\n    title: 'Software Engineer',\n    avatar: '/assets/zeelpro.png',\n    location: 'Junagadh, India',\n    experience: 'B.Tech Computer Science',\n    about:\n      'I am a Computer Science student from India with an interest in full stack webapp, mobile app, system design, and Generative AI.',\n    keywords: ['Software Engineer', 'Full Stack Developer', 'React', 'Node.js', 'python'],\n  },\n  contact: {\n    email: 'jasanizeel487@gmail.com',\n    phone: '+1234567890',\n    emailHref: 'mailto:jasanizeel487@gmail.com',\n    phoneHref: 'tel:+1234567890',\n  },\n  social: {\n    githubHandle: 'JasaniZeel4827',\n    githubHref: 'https://github.com/JasaniZeel4827',\n    twitterHandle: 'Jasani  Zeel',\n    twitterHref: 'https://x.com/deltapixel3777',\n    linkedinHandle: '',\n    linkedinHref: '#',\n  },\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,SAAS;QACP,MAAM;QACN,OAAO;QACP,QAAQ;QACR,UAAU;QACV,YAAY;QACZ,OACE;QACF,UAAU;YAAC;YAAqB;YAAwB;YAAS;YAAW;SAAS;IACvF;IACA,SAAS;QACP,OAAO;QACP,OAAO;QACP,WAAW;QACX,WAAW;IACb;IACA,QAAQ;QACN,cAAc;QACd,YAAY;QACZ,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,cAAc;IAChB;AACF"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/data/project.data.tsx"],"sourcesContent":["export type Projects = {\n  title: string\n  description: string\n  href: string\n}\n\nexport const projectsData: Projects[] = [\n  // {\n  //   title: 'Task Manager App',\n  //   description:\n  //     'A simple task management application to create, update, and delete tasks with a clean UI.',\n  //   href: '#',\n  // },\n  {\n    title: 'URL Shortner Web App',\n    description:\n      'A minimal MERN app to shorten URLs with custom aliases and click tracking.',\n    href: '#',\n  },\n  {\n    title: 'MasterJi - Online Learning Platform',\n    description:\n      'MasterJi is an AI-powered online learning platform offering personalized lessons, interactive videos, and smart assessments to make education engaging and effective.',\n    href: '#',\n  },\n  {\n    title: 'Personal Portfolio Website',\n    description:\n      'A personal portfolio website showcasing projects, skills, and experience with a modern design.',\n    href: '#',\n  },\n]\n"],"names":[],"mappings":";;;AAMO,MAAM,eAA2B;IACtC,IAAI;IACJ,+BAA+B;IAC/B,iBAAiB;IACjB,mGAAmG;IACnG,eAAe;IACf,KAAK;IACL;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;IACA;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;IACA;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;CACD"}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/data/work.data.tsx"],"sourcesContent":["// // export type Work = {\n// //   company: string\n// //   deliverable: string[]\n// //   fromDate: string\n// //   toDate: string\n// // }\n\n// // export const worksData: Work[] = [\n// //   {\n// //     company: 'Delta Crops Ltd.',\n// //     deliverable: [\n// //       'Developed a web application to manage the company’s inventory and sales.',\n// //       'Implemented a barcode scanner to track inventory.',\n// //     ],\n// //     fromDate: '2022-04',\n// //     toDate: 'Present',\n// //   },\n// //   {\n// //     company: 'NextGen Software',\n// //     deliverable: [\n// //       'Developed a full-stack e-commerce platform with product listings, cart functionality, and payment integration.',\n// //       'Integrated a payment gateway for seamless transactions.',\n// //     ],\n// //     fromDate: '2017-08',\n// //     toDate: '2019-02',\n// //   },\n// // ]\n\n\n\n\n// // export type Work = {\n// //   company: string;\n// //   position?: string; // Added 'position' as an optional field to better describe roles like \"Intern\" or \"Team Lead\" for hackathons.\n// //   deliverable: string[];\n// //   fromDate: string;\n// //   toDate: string;\n// // };\n\n// // export const worksData: Work[] = [\n// //   // --- Internships (2 entries) ---\n// //   {\n// //     company: 'Tech Rover Solutions Pvt Ltd', // Replace with actual company name\n// //     position: 'Generative AI Intern',\n// //     deliverable: [\n// //       'Developed and fine-tuned a custom large language model (LLM) for specific industry tasks using PyTorch and Hugging Face Transformers.',\n// //       'Implemented RAG (Retrieval-Augmented Generation) pipeline to enhance LLM responses with real-time data.',\n// //       'Contributed to the development of a Streamlit-based prototype showcasing AI capabilities.',\n// //       'Collaborated with senior researchers on optimizing model inference speed on cloud platforms.',\n// //     ],\n// //     fromDate: '2024-06', // Example dates: June 2024\n// //     toDate: '2024-09', // Example dates: September 2024\n// //   },\n// //   {\n// //     company: 'Noble University of Engineering', // IMPORTANT: Replace with your actual university name\n// //     position: 'Software Development Intern (Academic Project)',\n// //     deliverable: [\n// //       'Contributed to a research project on real-time data visualization by building interactive dashboards using React and D3.js.',\n// //       'Assisted in designing and implementing RESTful APIs with Flask for data backend.',\n// //       'Wrote comprehensive unit and integration tests, increasing code coverage by 15%.',\n// //     ],\n// //     fromDate: '2023-01', // Example dates: January 2023\n// //     toDate: '2023-05', // Example dates: May 2023\n// //   },\n\n// //   // --- Hackathons (4 entries, including 2 winners/runner-ups) ---\n\n// //   // Hackathon 1 (Winner/Runner-up)\n// //   {\n// //     company: 'University Hackathon 2024', // Replace with actual hackathon name and year\n// //     position: 'Team Lead - Runner-Up (Top 5%)', // Or 'Winner' / 'First Place'\n// //     deliverable: [\n// //       'Developed an AI-powered real-time sign language translator using TensorFlow and custom computer vision models in just 48 hours.',\n// //       'Achieved 92% accuracy on the test set for key functionality.',\n// //       'Presented solution to a panel of industry experts, receiving commendation for innovation and technical execution.',\n// //     ],\n// //     fromDate: '2024-03-15', // Specific start date of hackathon\n// //     toDate: '2024-03-17', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 2 (Winner/Runner-up)\n// //   {\n// //     company: 'CodeFest 2023', // Replace with actual hackathon name and year\n// //     position: 'Participant - Winner (Best Use of Google Cloud API)', // e.g., 'Best Use of [Specific Technology/API]'\n// //     deliverable: [\n// //       'Built a blockchain-based supply chain tracker prototype from scratch, incorporating smart contracts on Ethereum.',\n// //       'Successfully integrated Chainlink for data oracle services.',\n// //       'Collaborated effectively within a team of 4 developers under tight deadlines.',\n// //     ],\n// //     fromDate: '2023-10-20', // Specific start date of hackathon\n// //     toDate: '2023-10-22', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 3 (General Participation)\n// //   {\n// //     company: 'Data Science Challenge 2023', // Replace with actual hackathon name and year\n// //     position: 'Data Analyst / ML Engineer',\n// //     deliverable: [\n// //       'Analyzed a large dataset of customer purchasing behavior to identify key trends and predict churn risk.',\n// //       'Developed predictive models using scikit-learn and performed extensive data visualization using Matplotlib.',\n// //       'Contributed to the team\\'s final report and presentation of insights.',\n// //     ],\n// //     fromDate: '2023-07-07', // Specific start date of hackathon\n// //     toDate: '2023-07-09', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 4 (General Participation)\n// //   {\n// //     company: 'WebDev Sprint 2022', // Replace with actual hackathon name and year\n// //     position: 'Front-End Developer',\n// //     deliverable: [\n// //       'Designed and implemented the user interface for a local community platform using React and Chakra UI.',\n// //       'Ensured responsive design across various devices and optimized for performance.',\n// //       'Collaborated with backend developers to integrate API endpoints for dynamic content loading.',\n// //     ],\n// //     fromDate: '2022-04-01', // Specific start date of hackathon\n// //     toDate: '2022-04-03', // Specific end date of hackathon\n// //   },\n// // ];\n\n\n\n\n// // ai code testing\n\n// export type Work = {\n//   company: string;\n//   position?: string;\n//   deliverable: string[];\n//   fromDate: string;\n//   toDate: string;\n// };\n\n// export const worksData: Work[] = [\n//   // --- Internships (2 entries) ---\n//   {\n//     company: 'Tech Rover Solutions Pvt Ltd', // Example Company (Gen AI focused, easier level)\n//     position: 'Junior AI Development Intern',\n//     deliverable: [\n//       'Utilized OpenAI and Hugging Face APIs to build simple text generation and image recognition prototypes.',\n//       'Assisted in preparing and cleaning datasets for training small custom models.',\n//       'Developed basic web interfaces using Streamlit for demonstrating AI functionalities.',\n//       'Explored various pre-trained models and their applications for content creation.',\n//     ],\n//     fromDate: '2024-06',\n//     toDate: '2024-09',\n//   },\n//   {\n//     company: 'Noble University Tech Dept.', // University Internship (Development, intermediate level)\n//     position: 'Software Development Intern',\n//     deliverable: [\n//       'Developed and optimized backend APIs using Node.js and Express, handling moderate data loads and ensuring data integrity.',\n//       'Integrated third-party services and payment gateways for a university project, managing API keys and securing transactions.',\n//       'Implemented front-end components with React, focusing on reusable components and state management.',\n//       'Participated in code reviews and contributed to improving team coding standards.',\n//     ],\n//     fromDate: '2023-01',\n//     toDate: '2023-05',\n//   },\n\n//   // --- Hackathons (4 entries, including 2 winners/runner-ups) ---\n\n//   // Hackathon 1 (Winner/Runner-up - Gen AI Easy Level)\n//   {\n//     company: 'AI Challenge Hackathon 2025', // e.g., 'AI Challenge Hackathon 2024'\n//     position: 'Team Lead - Winner (Most Creative AI App)', // Or 'Runner-Up'\n//     deliverable: [\n//       'Developed a novel AI application that [briefly describe, e.g., \"generates personalized bedtime stories\"] using pre-trained language models and a simple prompt engineering approach.',\n//       'Integrated a basic text-to-speech API to enhance user experience within the 48-hour timeframe.',\n//       'Designed an intuitive user interface for easy interaction with the AI model.',\n//     ],\n//     fromDate: '2024-03-15',\n//     toDate: '2024-03-17',\n//   },\n//   // Hackathon 2 (Winner/Runner-up - Development Intermediate Level)\n//   {\n//     company: 'Smart City Hack 2024', // e.g., 'Smart City Hack 2023'\n//     position: 'Full Stack Engineer - Runner-Up (Best Solution for Urban Planning)',\n//     deliverable: [\n//       'Built a data visualization platform displaying real-time city data using Next.js and a Flask backend.',\n//       'Implemented robust data filtering and search functionalities, handling complex queries efficiently.',\n//       'Deployed the application using Docker containers, ensuring cross-platform compatibility.',\n//       'Optimized database queries for PostgreSQL, achieving fast load times for large datasets.',\n//     ],\n//     fromDate: '2023-10-20',\n//     toDate: '2023-10-22',\n//   },\n//    {\n//     company: 'Prompt Pioneers Fest 2023',\n//     position: 'AI Prompt Engineer',\n//     deliverable: [\n//       'Experimented with various prompting techniques, including role-playing and constraint-based prompting, to guide large language models (e.g., LLaMA 2) to generate specific marketing copy for fictional products.',\n//       'Evaluated the quality and relevance of AI-generated marketing outputs based on predefined criteria like persuasiveness and clarity, improving average score by 10%.',\n//       'Documented effective prompt strategies and shared a detailed guide on best practices for creative content generation with the hackathon team members.',\n//     ],\n//     fromDate: '2023-07-07',\n//     toDate: '2023-07-09',\n//   },\n  \n//   // Hackathon 4 (General Participation - Development Intermediate Level)\n//   {\n//     company: 'Open Source Contribution Gujarat Institute of Technology', // e.g., 'Open Source Contribution Hack 2022'\n//     position: 'Software Development Intern (Academic Project)',\n//     deliverable: [\n//       'Developed and optimized backend APIs for an online library management system using Node.js and Express, handling up to 100 concurrent requests.',\n//       'Integrated third-party services like Stripe for payment processing for a university event management platform, managing API keys securely.',\n//       'Implemented responsive front-end components for a student portal with React and Chakra UI, enhancing user navigation.',\n//       'Participated in daily stand-ups and contributed to improving team coding standards by documenting best practices for API design.',\n//     ],\n//     fromDate: '2022-04-01',\n//     toDate: '2022-04-03',\n//   },\n// ];\n\n\n\n\n// export type Work = {\n//   company: string;\n//   position?: string;\n//   deliverable: string[];\n//   fromDate: string;\n//   toDate: string;\n// };\n\n\n\n\n\nexport type Work = {\n  company: string;\n  position?: string;\n  deliverable: string[];\n  fromDate: string;\n  toDate: string;\n};\n\nexport const worksData: Work[] = [\n  {\n    company: 'Tech Rover – Web Development Internship',\n    position: 'Frontend Intern',\n    deliverable: [\n      'Worked on developing web interfaces using React and Tailwind CSS.',\n      'Assisted in creating responsive UI components for real client projects.',\n      'Collaborated with senior developers on improving application performance and usability.'\n    ],\n    fromDate: '2024-01',\n    toDate: '2024-02',\n  },\n  {\n    company: 'IIT Madras – Full Stack Web Dev with GenAI (by Coding Ninjas)',\n    position: 'Full Stack Intern',\n    deliverable: [\n      'Completed an internship focused on building full-stack web applications with integrated GenAI features.',\n      'Developed projects using React, Node.js, and MongoDB with OpenAI APIs for intelligent features.',\n      'Built a chatbot module using Generative AI and prompt engineering concepts.',\n      'Learned deployment practices and participated in weekly evaluations and mentorship sessions.'\n    ],\n    fromDate: '2023-05',\n    toDate: '2026-09',\n  },\n  // {\n  //   company: 'AI Hackathon – College Level',\n  //   position: 'Hackathon Participant',\n  //   deliverable: [\n  //     'Participated in a 48-hour college hackathon focused on AI-powered solutions.',\n  //     'Worked on a team project that used OpenAI API for generating personalized content.',\n  //     'Contributed to both backend integration and frontend UI/UX design.'\n  //   ],\n  //   fromDate: '2025-03-15',\n  //   toDate: '2025-03-17',\n  // },\n\n   {\n    company: 'College Level Hackathon',\n    position: 'Team Project Developer',\n    deliverable: [\n      'Participated in a 48-hour hackathon organized at the college level.',\n      'Built a web-based educational game designed to teach the fundamental concepts of programming and visual effects.',\n      'Focused on making the platform beginner-friendly and accessible to non-technical users.',\n      'Collaborated with teammates to ensure engaging design, interactivity, and learning effectiveness.'\n    ],\n    fromDate: '2025-01-09',\n    toDate: '2025-01-11',\n  },\n];\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/pages/index.tsx"],"sourcesContent":["// 'use client'\n// import { CNLink } from '@/components/chakra-next'\n// import { siteConfig } from '@/libs/configs/site.config'\n// import { projectsData } from '@/libs/data/project.data'\n// import { worksData } from '@/libs/data/work.data'\n// import {\n//   Box,\n//   Button,\n//   Center,\n//   Flex,\n//   Heading,\n//   HStack,\n//   Separator,\n//   SimpleGrid,\n//   Stack,\n//   Text,\n// } from '@chakra-ui/react'\n// import { IconType } from 'react-icons'\n// import { AiOutlineOpenAI } from 'react-icons/ai'\n// import {\n//   BiLogoFirebase,\n//   BiLogoFlask,\n//   BiLogoMongodb,\n//   BiLogoRedux,\n//   BiLogoTailwindCss,\n//   BiLogoTypescript,\n// } from 'react-icons/bi'\n// import {\n//   FaAws,\n//   FaCss3,\n//   FaDocker,\n//   FaGitAlt,\n//   FaGithub,\n//   FaHtml5,\n//   FaLinkedin,\n//   FaNodeJs,\n//   FaPython,\n//   FaReact,\n// } from 'react-icons/fa'\n// import { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\n// import { IoMdCheckmarkCircleOutline } from 'react-icons/io'\n// import { IoLogoJavascript } from 'react-icons/io5'\n// import { RiNextjsFill } from 'react-icons/ri'\n// import { SiExpress, SiMui, SiPrisma } from 'react-icons/si'\n\n// export default function Home() {\n//   return (\n//     <>\n//       <title>{siteConfig.profile.name}</title>\n//       <meta name=\"description\" content={siteConfig.profile.about} />\n//       <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n//       <Flex\n//         gap={4}\n//         flexDirection={{\n//           base: 'column',\n//           lg: 'row',\n//         }}\n//       >\n//         <Box\n//           width={{\n//             base: '100%',\n//             lg: '40%',\n//           }}\n//         >\n//           <About />\n//         </Box>\n//         <Stack gap={10} flex={1}>\n//           <TechStack />\n//           <Projects />\n//           <Work />\n//           <Contact />\n//         </Stack>\n//       </Flex>\n//     </>\n//   )\n// }\n\n// const About = () => {\n//   const socials: {\n//     Icon: IconType\n//     href: string\n//     title: string\n//   }[] = [\n//     {\n//       Icon: FaGithub,\n//       href: siteConfig.social.githubHref,\n//       title: 'Github',\n//     },\n//     {\n//       Icon: FaXTwitter,\n//       href: siteConfig.social.twitterHref,\n//       title: 'Twitter',\n//     },\n//     {\n//       Icon: FaLinkedin,\n//       href: siteConfig.social.linkedinHref,\n//       title: 'LinkedIn',\n//     },\n//   ]\n//   return (\n//     <Stack\n//       p={6}\n//       gap={4}\n//       borderWidth=\"1px\"\n//       borderColor=\"gray.subtel\"\n//       borderRadius=\"md\"\n//       height={'fit-content'}\n//       position={{ md: 'sticky' }}\n//       top={{ md: 24 }}\n//     >\n//       <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n//         {siteConfig.profile.name}\n//       </Heading>\n//       <Text fontSize={'sm'} color={'brand.secondary'}>\n//         {siteConfig.profile.about}\n//       </Text>\n//       <Center>\n//         {socials.map((item) => (\n//           <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n//             <CNLink href={item.href} color={'Brand'}>\n//               <item.Icon />\n//             </CNLink>\n//           </Button>\n//         ))}\n//       </Center>\n//       <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n//         <Flex justifyContent={'space-between'} gap={2}>\n//           <Flex direction=\"column\" flex={1}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.experience}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Experience\n//             </Text>\n//           </Flex>\n//           <Flex direction=\"column\" flex={1} textAlign={'right'}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.location}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Location\n//             </Text>\n//           </Flex>\n//         </Flex>\n//         <Button borderRadius={'md'}>\n//           <IoMdCheckmarkCircleOutline />\n//           Hire me\n//         </Button>\n//       </Flex>\n//     </Stack>\n//   )\n// }\n\n// const TechStack = () => {\n//   const items = [\n//     { name: 'TypeScript', badge: <BiLogoTypescript /> },\n//     { name: 'JavaScript', badge: <IoLogoJavascript /> },\n//     { name: 'React', badge: <FaReact /> },\n//     { name: 'Next', badge: <RiNextjsFill /> },\n//     { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n//     { name: 'Redux', badge: <BiLogoRedux /> },\n//     { name: 'Flask', badge: <BiLogoFlask /> },\n//     { name: 'HTML5', badge: <FaHtml5 /> },\n//     { name: 'CSS3', badge: <FaCss3 /> },\n//     { name: 'Node', badge: <FaNodeJs /> },\n//     { name: 'Express', badge: <SiExpress /> },\n//     { name: 'Python', badge: <FaPython /> },\n//     { name: 'MongoDB', badge: <BiLogoMongodb /> },\n//     { name: 'AWS', badge: <FaAws /> },\n//     { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n//     { name: 'Firebase', badge: <BiLogoFirebase /> },\n//     { name: 'Git', badge: <FaGitAlt /> },\n//     { name: 'Docker', badge: <FaDocker /> },\n//     { name: 'Prisma', badge: <SiPrisma /> },\n//     { name: 'MUI', badge: <SiMui /> },\n//   ]\n\n//   return (\n//     <Stack gap={4} id=\"home\">\n//       <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n//         Tech Stack\n//       </Heading>\n//       <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n//         {items.map((tech, index) => {\n//           return (\n//             <Button\n//               key={index}\n//               variant={'outline'}\n//               _hover={{ bg: 'brand.muted' }}\n//               color={'brand'}\n//               borderColor={'gray.subtel'}\n//             >\n//               {tech.badge}\n//               {tech.name}\n//             </Button>\n//           )\n//         })}\n//       </SimpleGrid>\n//     </Stack>\n//   )\n// }\n\n// const Projects = () => {\n//   return (\n//     <Stack gap={4} id=\"projects\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Projects\n//       </Heading>\n//       {projectsData.map((project, index) => {\n//         return (\n//           <CNLink\n//             key={index}\n//             href={project.href}\n//             borderWidth={'1px'}\n//             borderColor={'gray.subtel'}\n//             _focus={{\n//               textDecoration: 'none',\n//               boxShadow: 'none',\n//               borderColor: 'brand.emphasized',\n//               border: 'none',\n//             }}\n//             borderRadius={'md'}\n//             p={6}\n//             _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n//             target=\"_blank\"\n//           >\n//             <Stack alignItems=\"start\">\n//               <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                 {project.title}\n//               </Heading>\n//               <Text color=\"brand.secondary\" fontSize={'sm'}>\n//                 {project.description}\n//               </Text>\n//             </Stack>\n//           </CNLink>\n//         )\n//       })}\n//     </Stack>\n//   )\n// }\n\n// const Work = () => {\n//   return (\n//     <Stack gap={4} id=\"work\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Work\n//       </Heading>\n//       <Stack\n//         gap={5}\n//         p={6}\n//         borderWidth={'1px'}\n//         borderColor={'gray.subtel'}\n//         borderRadius={'lg'}\n//         separator={<Separator opacity={1} color={'brand'} />}\n//       >\n//         {worksData.map((work, index) => {\n//           return (\n//             <Stack gap={4} key={index} direction=\"column\">\n//               <Flex justify={'space-between'} alignItems={'end'}>\n//                 <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                   {work.company}\n//                 </Heading>\n//                 <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//                   <FaRegCalendarDays size={14} />\n//                   <Text fontSize={'xs'} color={'brand'}>\n//                     {work.fromDate} - {work.toDate}\n//                   </Text>\n//                 </HStack>\n//               </Flex>\n//               <Stack\n//                 fontSize={'sm'}\n//                 color={'brand.secondary'}\n//                 as={'ul'}\n//                 listStyleType={'disc'}\n//                 ml={4}\n//               >\n//                 {work.deliverable.map((item, index) => (\n//                   <li key={index}>{item}</li>\n//                 ))}\n//               </Stack>\n//             </Stack>\n//           )\n//         })}\n//       </Stack>\n//     </Stack>\n//   )\n// }\n\n// const Contact = () => {\n//   return (\n//     <Stack gap={6} marginBottom={10} id=\"contact\">\n//       <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n//         Contact\n//       </Heading>\n//       <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//         <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n//           Best way to reach me is through:{' '}\n//           <CNLink\n//             _hover={{ color: 'brand' }}\n//             color={'brand.secondary'}\n//             _focus={{ boxShadow: 'none' }}\n//             href={siteConfig.contact.emailHref}\n//           >\n//             {siteConfig.contact.email}\n//           </CNLink>\n//         </Text>\n//       </Box>\n//     </Stack>\n//   )\n// }\n\n\n\n\n\n// ai code testing\n\n// 'use client'\n// import { CNLink } from '@/components/chakra-next'\n// import { siteConfig } from '@/libs/configs/site.config'\n// import { projectsData } from '@/libs/data/project.data'\n// import { worksData } from '@/libs/data/work.data'\n// import {\n//   Box,\n//   Button,\n//   Center,\n//   Flex,\n//   Heading,\n//   HStack,\n//   Separator,\n//   SimpleGrid,\n//   Stack,\n//   Text,\n// } from '@chakra-ui/react'\n// import { IconType } from 'react-icons'\n// import { AiOutlineOpenAI } from 'react-icons/ai'\n// import {\n//   BiLogoFirebase,\n//   BiLogoFlask,\n//   BiLogoMongodb,\n//   BiLogoRedux,\n//   BiLogoTailwindCss,\n//   BiLogoTypescript,\n// } from 'react-icons/bi'\n// import {\n//   FaAws,\n//   FaCss3,\n//   FaDocker,\n//   FaGitAlt,\n//   FaGithub,\n//   FaHtml5,\n//   FaLinkedin,\n//   FaNodeJs,\n//   FaPython,\n//   FaReact,\n// } from 'react-icons/fa'\n// import { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\n// import { IoMdCheckmarkCircleOutline } from 'react-icons/io'\n// import { IoLogoJavascript } from 'react-icons/io5'\n// import { RiNextjsFill } from 'react-icons/ri'\n// import {\n//   SiExpress,\n//   SiMui,\n//   SiPrisma,\n//   SiHuggingface, // Added Hugging Face icon\n//   SiPytorch, // Added PyTorch icon\n//   SiTensorflow, // Added TensorFlow icon\n//   SiLangchain, // Added LangChain icon\n// } from 'react-icons/si'\n\n// export default function Home() {\n//   return (\n//     <>\n//       <title>{siteConfig.profile.name}</title>\n//       <meta name=\"description\" content={siteConfig.profile.about} />\n//       <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n//       <Flex\n//         gap={4}\n//         flexDirection={{\n//           base: 'column',\n//           lg: 'row',\n//         }}\n//       >\n//         <Box\n//           width={{\n//             base: '100%',\n//             lg: '40%',\n//           }}\n//         >\n//           <About />\n//         </Box>\n//         <Stack gap={10} flex={1}>\n//           <TechStack />\n//           <Projects />\n//           <Work />\n//           <Contact />\n//         </Stack>\n//       </Flex>\n//     </>\n//   )\n// }\n\n// const About = () => {\n//   const socials: {\n//     Icon: IconType\n//     href: string\n//     title: string\n//   }[] = [\n//     {\n//       Icon: FaGithub,\n//       href: siteConfig.social.githubHref,\n//       title: 'Github',\n//     },\n//     {\n//       Icon: FaXTwitter,\n//       href: siteConfig.social.twitterHref,\n//       title: 'Twitter',\n//     },\n//     {\n//       Icon: FaLinkedin,\n//       href: siteConfig.social.linkedinHref,\n//       title: 'LinkedIn',\n//     },\n//   ]\n//   return (\n//     <Stack\n//       p={6}\n//       gap={4}\n//       borderWidth=\"1px\"\n//       borderColor=\"gray.subtel\"\n//       borderRadius=\"md\"\n//       height={'fit-content'}\n//       position={{ md: 'sticky' }}\n//       top={{ md: 24 }}\n//     >\n//       <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n//         {siteConfig.profile.name}\n//       </Heading>\n//       <Text fontSize={'sm'} color={'brand.secondary'}>\n//         {siteConfig.profile.about}\n//       </Text>\n//       <Center>\n//         {socials.map((item) => (\n//           <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n//             <CNLink href={item.href} color={'Brand'}>\n//               <item.Icon />\n//             </CNLink>\n//           </Button>\n//         ))}\n//       </Center>\n//       <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n//         <Flex justifyContent={'space-between'} gap={2}>\n//           <Flex direction=\"column\" flex={1}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.experience}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Experience\n//             </Text>\n//           </Flex>\n//           <Flex direction=\"column\" flex={1} textAlign={'right'}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.location}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Location\n//             </Text>\n//           </Flex>\n//         </Flex>\n//         <Button borderRadius={'md'}>\n//           <IoMdCheckmarkCircleOutline />\n//           Hire me\n//         </Button>\n//       </Flex>\n//     </Stack>\n//   )\n// }\n\n// const TechStack = () => {\n//   const items = [\n//     { name: 'TypeScript', badge: <BiLogoTypescript /> },\n//     { name: 'JavaScript', badge: <IoLogoJavascript /> },\n//     { name: 'React', badge: <FaReact /> },\n//     { name: 'Next', badge: <RiNextjsFill /> },\n//     { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n//     { name: 'Redux', badge: <BiLogoRedux /> },\n//     { name: 'Flask', badge: <BiLogoFlask /> },\n//     { name: 'HTML5', badge: <FaHtml5 /> },\n//     { name: 'CSS3', badge: <FaCss3 /> },\n//     { name: 'Node', badge: <FaNodeJs /> },\n//     { name: 'Express', badge: <SiExpress /> },\n//     { name: 'Python', badge: <FaPython /> },\n//     { name: 'MongoDB', badge: <BiLogoMongodb /> },\n//     { name: 'AWS', badge: <FaAws /> },\n//     // Generative AI Tech Stack Additions\n//     { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n//     { name: 'Hugging Face', badge: <SiHuggingface /> },\n//     { name: 'PyTorch', badge: <SiPytorch /> },\n//     { name: 'TensorFlow', badge: <SiTensorflow /> },\n//     { name: 'LangChain', badge: <SiLangchain /> },\n//     // End Generative AI Tech Stack Additions\n//     { name: 'Firebase', badge: <BiLogoFirebase /> },\n//     { name: 'Git', badge: <FaGitAlt /> },\n//     { name: 'Docker', badge: <FaDocker /> },\n//     { name: 'Prisma', badge: <SiPrisma /> },\n//     { name: 'MUI', badge: <SiMui /> },\n//   ]\n\n//   return (\n//     <Stack gap={4} id=\"home\">\n//       <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n//         Tech Stack\n//       </Heading>\n//       <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n//         {items.map((tech, index) => {\n//           return (\n//             <Button\n//               key={index}\n//               variant={'outline'}\n//               _hover={{ bg: 'brand.muted' }}\n//               color={'brand'}\n//               borderColor={'gray.subtel'}\n//             >\n//               {tech.badge}\n//               {tech.name}\n//             </Button>\n//           )\n//         })}\n//       </SimpleGrid>\n//     </Stack>\n//   )\n// }\n\n// const Projects = () => {\n//   return (\n//     <Stack gap={4} id=\"projects\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Projects\n//       </Heading>\n//       {projectsData.map((project, index) => {\n//         return (\n//           <CNLink\n//             key={index}\n//             href={project.href}\n//             borderWidth={'1px'}\n//             borderColor={'gray.subtel'}\n//             _focus={{\n//               textDecoration: 'none',\n//               boxShadow: 'none',\n//               borderColor: 'brand.emphasized',\n//               border: 'none',\n//             }}\n//             borderRadius={'md'}\n//             p={6}\n//             _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n//             target=\"_blank\"\n//           >\n//             <Stack alignItems=\"start\">\n//               <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                 {project.title}\n//               </Heading>\n//               <Text color=\"brand.secondary\" fontSize={'sm'}>\n//                 {project.description}\n//               </Text>\n//             </Stack>\n//           </CNLink>\n//         )\n//       })}\n//     </Stack>\n//   )\n// }\n\n// const Work = () => {\n//   return (\n//     <Stack gap={4} id=\"work\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Work\n//       </Heading>\n//       <Stack\n//         gap={5}\n//         p={6}\n//         borderWidth={'1px'}\n//         borderColor={'gray.subtel'}\n//         borderRadius={'lg'}\n//         separator={<Separator opacity={1} color={'brand'} />}\n//       >\n//         {worksData.map((work, index) => {\n//           return (\n//             <Stack gap={4} key={index} direction=\"column\">\n//               <Flex justify={'space-between'} alignItems={'end'}>\n//                 <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                   {work.company}\n//                 </Heading>\n//                 <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//                   <FaRegCalendarDays size={14} />\n//                   <Text fontSize={'xs'} color={'brand'}>\n//                     {work.fromDate} - {work.toDate}\n//                   </Text>\n//                 </HStack>\n//               </Flex>\n//               <Stack\n//                 fontSize={'sm'}\n//                 color={'brand.secondary'}\n//                 as={'ul'}\n//                 listStyleType={'disc'}\n//                 ml={4}\n//               >\n//                 {work.deliverable.map((item, index) => (\n//                   <li key={index}>{item}</li>\n//                 ))}\n//               </Stack>\n//             </Stack>\n//           )\n//         })}\n//       </Stack>\n//     </Stack>\n//   )\n// }\n\n// const Contact = () => {\n//   return (\n//     <Stack gap={6} marginBottom={10} id=\"contact\">\n//       <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n//         Contact\n//       </Heading>\n//       <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//         <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n//           Best way to reach me is through:{' '}\n//           <CNLink\n//             _hover={{ color: 'brand' }}\n//             color={'brand.secondary'}\n//             _focus={{ boxShadow: 'none' }}\n//             href={siteConfig.contact.emailHref}\n//           >\n//             {siteConfig.contact.email}\n//           </CNLink>\n//         </Text>\n//       </Box>\n//     </Stack>\n//   )\n// }\n\n\n\n\n// another ai code testing\n'use client'\nimport { CNLink } from '@/components/chakra-next'\nimport { siteConfig } from '@/libs/configs/site.config'\nimport { projectsData } from '@/libs/data/project.data'\nimport { worksData } from '@/libs/data/work.data'\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Separator,\n  SimpleGrid,\n  Stack,\n  Text,\n} from '@chakra-ui/react'\nimport { IconType } from 'react-icons'\nimport { AiOutlineOpenAI } from 'react-icons/ai'\nimport {\n  BiLogoFirebase,\n  BiLogoFlask,\n  BiLogoMongodb,\n  BiLogoRedux,\n  BiLogoTailwindCss,\n  BiLogoTypescript,\n  BiLogoPostgresql, // Added PostgreSQL icon\n  BiLogoKubernetes, // Added Kubernetes icon\n} from 'react-icons/bi'\nimport {\n  FaAws,\n  FaCss3,\n  FaDocker,\n  FaGitAlt,\n  FaGithub,\n  FaHtml5,\n  FaLinkedin,\n  FaNodeJs,\n  FaPython,\n  FaReact,\n} from 'react-icons/fa'\nimport { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\nimport { IoMdCheckmarkCircleOutline } from 'react-icons/io'\nimport { IoLogoJavascript } from 'react-icons/io5'\nimport { RiNextjsFill } from 'react-icons/ri'\nimport {\n  SiExpress,\n  SiMui,\n  SiPrisma,\n  SiHuggingface,\n  SiPytorch,\n  SiTensorflow,\n  SiLangchain,\n  SiGooglecloud, // Added Google Cloud icon (for Gen AI services like Vertex AI)\n  SiApacheairflow, // Added Apache Airflow icon (for MLOps/data orchestration)\n  SiKeras, // Added Keras icon (for deep learning, often used with TensorFlow)\n} from 'react-icons/si'\n\nexport default function Home() {\n  return (\n    <>\n      <title>{siteConfig.profile.name}</title>\n      <meta name=\"description\" content={siteConfig.profile.about} />\n      <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n      <Flex\n        gap={4}\n        flexDirection={{\n          base: 'column',\n          lg: 'row',\n        }}\n      >\n        <Box\n          width={{\n            base: '100%',\n            lg: '40%',\n          }}\n        >\n          <About />\n        </Box>\n        <Stack gap={10} flex={1}>\n          <TechStack />\n          <Projects />\n          <Work />\n          <Contact />\n        </Stack>\n      </Flex>\n    </>\n  )\n}\n\nconst About = () => {\n  const socials: {\n    Icon: IconType\n    href: string\n    title: string\n  }[] = [\n    {\n      Icon: FaGithub,\n      href: siteConfig.social.githubHref,\n      title: 'Github',\n    },\n    {\n      Icon: FaXTwitter,\n      href: siteConfig.social.twitterHref,\n      title: 'Twitter',\n    },\n    {\n      Icon: FaLinkedin,\n      href: siteConfig.social.linkedinHref,\n      title: 'LinkedIn',\n    },\n  ]\n  return (\n    <Stack\n      p={6}\n      gap={4}\n      borderWidth=\"1px\"\n      borderColor=\"gray.subtel\"\n      borderRadius=\"md\"\n      height={'fit-content'}\n      position={{ md: 'sticky' }}\n      top={{ md: 24 }}\n    >\n      <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n        {siteConfig.profile.name}\n      </Heading>\n      <Text fontSize={'sm'} color={'brand.secondary'}>\n        {siteConfig.profile.about}\n      </Text>\n      <Center>\n        {socials.map((item) => (\n          <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n            <CNLink href={item.href} color={'Brand'}>\n              <item.Icon />\n            </CNLink>\n          </Button>\n        ))}\n      </Center>\n      <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n        <Flex justifyContent={'space-between'} gap={2}>\n          <Flex direction=\"column\" flex={1}>\n            <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n              {siteConfig.profile.experience}\n            </Heading>\n            <Text fontSize=\"xs\" color=\"brand.secondary\">\n              Experience\n            </Text>\n          </Flex>\n          <Flex direction=\"column\" flex={1} textAlign={'right'}>\n            <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n              {siteConfig.profile.location}\n            </Heading>\n            <Text fontSize=\"xs\" color=\"brand.secondary\">\n              Location\n            </Text>\n          </Flex>\n        </Flex>\n        <Button borderRadius={'md'}>\n          <IoMdCheckmarkCircleOutline />\n          Hire me\n        </Button>\n      </Flex>\n    </Stack>\n  )\n}\n\nconst TechStack = () => {\n  const items = [\n    { name: 'TypeScript', badge: <BiLogoTypescript /> },\n    { name: 'JavaScript', badge: <IoLogoJavascript /> },\n    { name: 'React', badge: <FaReact /> },\n    { name: 'Next', badge: <RiNextjsFill /> },\n    { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n    { name: 'Redux', badge: <BiLogoRedux /> },\n    { name: 'Flask', badge: <BiLogoFlask /> },\n    { name: 'HTML5', badge: <FaHtml5 /> },\n    { name: 'CSS3', badge: <FaCss3 /> },\n    { name: 'Node', badge: <FaNodeJs /> },\n    { name: 'Express', badge: <SiExpress /> },\n    { name: 'Python', badge: <FaPython /> },\n    { name: 'MongoDB', badge: <BiLogoMongodb /> },\n    { name: 'AWS', badge: <FaAws /> },\n    { name: 'Firebase', badge: <BiLogoFirebase /> },\n    { name: 'Git', badge: <FaGitAlt /> },\n    { name: 'Docker', badge: <FaDocker /> },\n    { name: 'Prisma', badge: <SiPrisma /> },\n    // { name: 'MUI', badge: <SiMui /> },\n    // New General Development Tech Stack Additions\n    { name: 'PostgreSQL', badge: <BiLogoPostgresql /> }, // Relational Database\n    { name: 'Kubernetes', badge: <BiLogoKubernetes /> }, // Container Orchestration\n    // { name: 'GCP', badge: <SiGooglecloud /> }, // General Cloud Provider\n    // Generative AI Tech Stack Additions\n    { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n    // { name: 'Hugging Face', badge: <SiHuggingface /> },\n    // { name: 'PyTorch', badge: <SiPytorch /> },\n    // { name: 'TensorFlow', badge: <SiTensorflow /> },\n    // { name: 'LangChain', badge: <SiLangchain /> },\n    // { name: 'Apache Airflow', badge: <SiApacheairflow /> }, // MLOps/Data Orchestration for Gen AI pipelines\n    // { name: 'Keras', badge: <SiKeras /> }, // High-level API for neural networks, often with TensorFlow/JAX/PyTorch\n  ]\n\n  return (\n    <Stack gap={4} id=\"home\">\n      <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n        Tech Stack\n      </Heading>\n      <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n        {items.map((tech, index) => {\n          return (\n            <Button\n              key={index}\n              variant={'outline'}\n              _hover={{ bg: 'brand.muted' }}\n              color={'brand'}\n              borderColor={'gray.subtel'}\n            >\n              {tech.badge}\n              {tech.name}\n            </Button>\n          )\n        })}\n      </SimpleGrid>\n    </Stack>\n  )\n}\n\nconst Projects = () => {\n  return (\n    <Stack gap={4} id=\"projects\">\n      <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n        Projects\n      </Heading>\n      {projectsData.map((project, index) => {\n        return (\n          <CNLink\n            key={index}\n            href={project.href}\n            borderWidth={'1px'}\n            borderColor={'gray.subtel'}\n            _focus={{\n              textDecoration: 'none',\n              boxShadow: 'none',\n              borderColor: 'brand.emphasized',\n              border: 'none',\n            }}\n            borderRadius={'md'}\n            p={6}\n            _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n            target=\"_blank\"\n          >\n            <Stack alignItems=\"start\">\n              <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n                {project.title}\n              </Heading>\n              <Text color=\"brand.secondary\" fontSize={'sm'}>\n                {project.description}\n              </Text>\n            </Stack>\n          </CNLink>\n        )\n      })}\n    </Stack>\n  )\n}\n\nconst Work = () => {\n  return (\n    <Stack gap={4} id=\"work\">\n      <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n        Work\n      </Heading>\n      <Stack\n        gap={5}\n        p={6}\n        borderWidth={'1px'}\n        borderColor={'gray.subtel'}\n        borderRadius={'lg'}\n        separator={<Separator opacity={1} color={'brand'} />}\n      >\n        {worksData.map((work, index) => {\n          return (\n            <Stack gap={4} key={index} direction=\"column\">\n              <Flex justify={'space-between'} alignItems={'end'}>\n                <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n                  {work.company}\n                </Heading>\n                <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n                  <FaRegCalendarDays size={14} />\n                  <Text fontSize={'xs'} color={'brand'}>\n                    {work.fromDate} - {work.toDate}\n                  </Text>\n                </HStack>\n              </Flex>\n              <Stack\n                fontSize={'sm'}\n                color={'brand.secondary'}\n                as={'ul'}\n                listStyleType={'disc'}\n                ml={4}\n              >\n                {work.deliverable.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </Stack>\n            </Stack>\n          )\n        })}\n      </Stack>\n    </Stack>\n  )\n}\n\nconst Contact = () => {\n  return (\n    <Stack gap={6} marginBottom={10} id=\"contact\">\n      <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n        Contact\n      </Heading>\n      <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n        <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n          Best way to reach me is through:{' '}\n          <CNLink\n            _hover={{ color: 'brand' }}\n            color={'brand.secondary'}\n            _focus={{ boxShadow: 'none' }}\n            href={siteConfig.contact.emailHref}\n          >\n            {siteConfig.contact.email}\n          </CNLink>\n        </Text>\n      </Box>\n    </Stack>\n  )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2379, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0]}},
    {"offset": {"line": 2395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}