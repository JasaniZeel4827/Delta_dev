{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;;kCACC,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/ui/color-mode.tsx"],"sourcesContent":["\"use client\"\n\nimport type { IconButtonProps } from \"@chakra-ui/react\"\nimport { ClientOnly, IconButton, Skeleton } from \"@chakra-ui/react\"\nimport { ThemeProvider, useTheme } from \"next-themes\"\nimport type { ThemeProviderProps } from \"next-themes\"\nimport * as React from \"react\"\nimport { LuMoon, LuSun } from \"react-icons/lu\"\n\nexport interface ColorModeProviderProps extends ThemeProviderProps {_placeholder?: never}\n\nexport function ColorModeProvider(props: ColorModeProviderProps) {\n  return (\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange {...props} />\n  )\n}\n\nexport function useColorMode() {\n  const { resolvedTheme, setTheme } = useTheme()\n  const toggleColorMode = () => {\n    setTheme(resolvedTheme === \"light\" ? \"dark\" : \"light\")\n  }\n  return {\n    colorMode: resolvedTheme,\n    setColorMode: setTheme,\n    toggleColorMode,\n  }\n}\n\nexport function useColorModeValue<T>(light: T, dark: T) {\n  const { colorMode } = useColorMode()\n  return colorMode === \"light\" ? light : dark\n}\n\nexport function ColorModeIcon() {\n  const { colorMode } = useColorMode()\n  return colorMode === \"light\" ? <LuSun /> : <LuMoon />\n}\n\ninterface ColorModeButtonProps extends Omit<IconButtonProps, \"aria-label\"> {_placeholder?: never}\n\nexport const ColorModeButton = React.forwardRef<\n  HTMLButtonElement,\n  ColorModeButtonProps\n>(function ColorModeButton(props, ref) {\n  const { toggleColorMode } = useColorMode()\n  return (\n    <ClientOnly fallback={<Skeleton boxSize=\"8\" />}>\n      <IconButton\n        onClick={toggleColorMode}\n        variant=\"ghost\"\n        aria-label=\"Toggle color mode\"\n        size=\"sm\"\n        ref={ref}\n        {...props}\n        css={{\n          _icon: {\n            width: \"5\",\n            height: \"5\",\n          },\n        }}\n      >\n        <ColorModeIcon />\n      </IconButton>\n    </ClientOnly>\n  )\n})\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AAEA;AACA;;;;;;AAPA;;;;;;AAWO,SAAS,kBAAkB,KAA6B;IAC7D,qBACE,qKAAC,4HAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;AAEO,SAAS;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,UAAU,SAAS;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;AAEO,SAAS,kBAAqB,KAAQ,EAAE,IAAO;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,UAAU,QAAQ;AACzC;AAEO,SAAS;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,wBAAU,qKAAC,uIAAA,CAAA,QAAK;;;;6BAAM,qKAAC,uIAAA,CAAA,SAAM;;;;;AACpD;AAIO,MAAM,gCAAkB,oGAAM,UAAU,CAG7C,SAAS,gBAAgB,KAAK,EAAE,GAAG;IACnC,MAAM,EAAE,eAAe,EAAE,GAAG;IAC5B,qBACE,qKAAC,8IAAA,CAAA,aAAU;QAAC,wBAAU,qKAAC,8IAAA,CAAA,WAAQ;YAAC,SAAQ;;;;;;kBACtC,cAAA,qKAAC,8IAAA,CAAA,aAAU;YACT,SAAS;YACT,SAAQ;YACR,cAAW;YACX,MAAK;YACL,KAAK;YACJ,GAAG,KAAK;YACT,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,QAAQ;gBACV;YACF;sBAEA,cAAA,qKAAC;;;;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/configs/site.config.ts"],"sourcesContent":["export const siteConfig = {\n  profile: {\n    name: 'Jasani Zeel',\n    title: 'Software Engineer',\n    avatar: '/assets/zeelpro.png',\n    location: 'Junagadh, India',\n    experience: 'B.Tech Computer Science',\n    about:\n      'I am a Computer Science student from India with an interest in full stack webapp, mobile app, system design, and Generative AI.',\n    keywords: ['Software Engineer', 'Full Stack Developer', 'React', 'Node.js', 'python'],\n  },\n  contact: {\n    email: 'jasanizeel487@gmail.com',\n    phone: '+1234567890',\n    emailHref: 'mailto:jasanizeel487@gmail.com',\n    phoneHref: 'tel:+1234567890',\n  },\n  social: {\n    githubHandle: 'JasaniZeel4827',\n    githubHref: 'https://github.com/JasaniZeel4827',\n    twitterHandle: 'Jasani  Zeel',\n    twitterHref: 'https://x.com/deltapixel3777',\n    linkedinHandle: '',\n    linkedinHref: '#',\n  },\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB,SAAS;QACP,MAAM;QACN,OAAO;QACP,QAAQ;QACR,UAAU;QACV,YAAY;QACZ,OACE;QACF,UAAU;YAAC;YAAqB;YAAwB;YAAS;YAAW;SAAS;IACvF;IACA,SAAS;QACP,OAAO;QACP,OAAO;QACP,WAAW;QACX,WAAW;IACb;IACA,QAAQ;QACN,cAAc;QACd,YAAY;QACZ,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,cAAc;IAChB;AACF"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport type { GroupProps, SlotRecipeProps } from \"@chakra-ui/react\"\nimport { Avatar as ChakraAvatar, Group } from \"@chakra-ui/react\"\nimport * as React from \"react\"\n\ntype ImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface AvatarProps extends ChakraAvatar.RootProps {\n  name?: string\n  src?: string\n  srcSet?: string\n  loading?: ImageProps[\"loading\"]\n  icon?: React.ReactElement\n  fallback?: React.ReactNode\n}\n\nexport const Avatar = React.forwardRef<HTMLDivElement, AvatarProps>(\n  function Avatar(props, ref) {\n    const { name, src, srcSet, loading, icon, fallback, children, ...rest } =\n      props\n    return (\n      <ChakraAvatar.Root ref={ref} {...rest}>\n        <AvatarFallback name={name} icon={icon}>\n          {fallback}\n        </AvatarFallback>\n        <ChakraAvatar.Image src={src} srcSet={srcSet} loading={loading} />\n        {children}\n      </ChakraAvatar.Root>\n    )\n  },\n)\n\ninterface AvatarFallbackProps extends ChakraAvatar.FallbackProps {\n  name?: string\n  icon?: React.ReactElement\n}\n\nconst AvatarFallback = React.forwardRef<HTMLDivElement, AvatarFallbackProps>(\n  function AvatarFallback(props, ref) {\n    const { name, icon, children, ...rest } = props\n    return (\n      <ChakraAvatar.Fallback ref={ref} {...rest}>\n        {children}\n        {name != null && children == null && <>{getInitials(name)}</>}\n        {name == null && children == null && (\n          <ChakraAvatar.Icon asChild={!!icon}>{icon}</ChakraAvatar.Icon>\n        )}\n      </ChakraAvatar.Fallback>\n    )\n  },\n)\n\nfunction getInitials(name: string) {\n  const names = name.trim().split(\" \")\n  const firstName = names[0] != null ? names[0] : \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\ninterface AvatarGroupProps extends GroupProps, SlotRecipeProps<\"avatar\"> {}\n\nexport const AvatarGroup = React.forwardRef<HTMLDivElement, AvatarGroupProps>(\n  function AvatarGroup(props, ref) {\n    const { size, variant, borderless, ...rest } = props\n    return (\n      <ChakraAvatar.PropsProvider value={{ size, variant, borderless }}>\n        <Group gap=\"0\" spaceX=\"-3\" ref={ref} {...rest} />\n      </ChakraAvatar.PropsProvider>\n    )\n  },\n)\n"],"names":[],"mappings":";;;;;AAGA;AACA;;;;;AAJA;;;;AAiBO,MAAM,uBAAS,oGAAM,UAAU,CACpC,SAAS,OAAO,KAAK,EAAE,GAAG;IACxB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,GACrE;IACF,qBACE,qKAAC,8IAAA,CAAA,SAAY,CAAC,IAAI;QAAC,KAAK;QAAM,GAAG,IAAI;;0BACnC,qKAAC;gBAAe,MAAM;gBAAM,MAAM;0BAC/B;;;;;;0BAEH,qKAAC,8IAAA,CAAA,SAAY,CAAC,KAAK;gBAAC,KAAK;gBAAK,QAAQ;gBAAQ,SAAS;;;;;;YACtD;;;;;;;AAGP;AAQF,MAAM,+BAAiB,oGAAM,UAAU,CACrC,SAAS,eAAe,KAAK,EAAE,GAAG;IAChC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG;IAC1C,qBACE,qKAAC,8IAAA,CAAA,SAAY,CAAC,QAAQ;QAAC,KAAK;QAAM,GAAG,IAAI;;YACtC;YACA,QAAQ,QAAQ,YAAY,sBAAQ;0BAAG,YAAY;;YACnD,QAAQ,QAAQ,YAAY,sBAC3B,qKAAC,8IAAA,CAAA,SAAY,CAAC,IAAI;gBAAC,SAAS,CAAC,CAAC;0BAAO;;;;;;;;;;;;AAI7C;AAGF,SAAS,YAAY,IAAY;IAC/B,MAAM,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC;IAChC,MAAM,YAAY,KAAK,CAAC,EAAE,IAAI,OAAO,KAAK,CAAC,EAAE,GAAG;IAChD,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,GAAG;IAC9D,OAAO,aAAa,WAChB,GAAG,UAAU,MAAM,CAAC,KAAK,SAAS,MAAM,CAAC,IAAI,GAC7C,UAAU,MAAM,CAAC;AACvB;AAIO,MAAM,4BAAc,oGAAM,UAAU,CACzC,SAAS,YAAY,KAAK,EAAE,GAAG;IAC7B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,MAAM,GAAG;IAC/C,qBACE,qKAAC,8IAAA,CAAA,SAAY,CAAC,aAAa;QAAC,OAAO;YAAE;YAAM;YAAS;QAAW;kBAC7D,cAAA,qKAAC,8IAAA,CAAA,QAAK;YAAC,KAAI;YAAI,QAAO;YAAK,KAAK;YAAM,GAAG,IAAI;;;;;;;;;;;AAGnD"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/ui/container.tsx"],"sourcesContent":["import { Container, ContainerProps } from '@chakra-ui/react'\n\nexport const MyContainer = ({ children, ...props }: ContainerProps) => {\n  return (\n    <Container px={{ base: 2, md: 4 }} maxW={'5xl'} mx={'auto'} {...props}>\n      {children}\n    </Container>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE,GAAG,OAAuB;IAChE,qBACE,qKAAC,8IAAA,CAAA,YAAS;QAAC,IAAI;YAAE,MAAM;YAAG,IAAI;QAAE;QAAG,MAAM;QAAO,IAAI;QAAS,GAAG,KAAK;kBAClE;;;;;;AAGP"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/navbar.tsx"],"sourcesContent":["'use client'\nimport { ColorModeButton, useColorMode } from '@/components/ui/color-mode'\nimport { siteConfig } from '@/libs/configs/site.config'\nimport { Box, Button, Flex, HStack, Link, Stack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { IoBriefcaseOutline, IoHomeOutline, IoMailOpenOutline, IoMenu } from 'react-icons/io5'\nimport { PiProjectorScreen } from 'react-icons/pi'\nimport { RxCross2 } from 'react-icons/rx'\nimport { Avatar } from './ui/avatar'\nimport { MyContainer } from './ui/container'\n\nexport default function Navbar() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const { toggleColorMode } = useColorMode()\n\n  const toggleMenu = () => {\n    setIsMenuOpen((prev) => !prev)\n  }\n  return (\n    <MyContainer zIndex={1} position={'sticky'} top={3}>\n      <Box mb={10} borderWidth=\"1px\" borderColor=\"gray.subtel\" borderRadius=\"md\" bg=\"bg\">\n        <Flex\n          justifyContent={{\n            base: 'space-between',\n            md: 'space-between',\n          }}\n          py={3}\n          px={6}\n        >\n          <HStack gap={4} px={{ base: 3, md: 0 }}>\n            <Avatar size={'sm'} name={siteConfig.profile.name} src={siteConfig.profile.avatar} />\n            <Button\n              variant={'outline'}\n              padding={2}\n              _hover={{ bg: 'brand.muted' }}\n              borderColor={'gray.subtel'}\n              hideBelow={'md'}\n            >\n              <Link\n                fontWeight={'bold'}\n                href={siteConfig.social.twitterHref}\n                _focus={{ outline: 'none', boxShadow: 'none' }}\n                _hover={{ textDecoration: 'none' }}\n              >\n                @{siteConfig.social.twitterHandle}\n              </Link>\n            </Button>\n          </HStack>\n          <Button\n            variant={'outline'}\n            padding={2}\n            _hover={{ bg: 'brand.muted' }}\n            borderColor={'gray.subtel'}\n            hideFrom={'md'}\n          >\n            <Link\n              fontWeight={'bold'}\n              href={siteConfig.social.twitterHref}\n              _focus={{ outline: 'none', boxShadow: 'none' }}\n              _hover={{ textDecoration: 'none' }}\n            >\n              @{siteConfig.social.twitterHandle}\n            </Link>\n          </Button>\n          <HStack gap={4} hideBelow={'md'}>\n            {navitems.map((nav, index) => {\n              return (\n                <Link\n                  key={index}\n                  href={nav.href}\n                  border={0}\n                  p={2}\n                  borderRadius={'md'}\n                  _hover={{ bg: 'brand.muted', textDecoration: 'none' }}\n                >\n                  {nav.icon}\n                  {nav.label}\n                </Link>\n              )\n            })}\n            <ColorModeButton onClick={toggleColorMode} />\n          </HStack>\n          <Button\n            p={2}\n            hideFrom={'md'}\n            variant={'outline'}\n            padding={2}\n            _hover={{ bg: 'brand.muted' }}\n            color={'brand'}\n            border={0}\n            onClick={toggleMenu}\n          >\n            {isMenuOpen ? <RxCross2 /> : <IoMenu />}\n          </Button>\n        </Flex>\n        {isMenuOpen && (\n          <Box hideFrom={'md'} p={2}>\n            <Stack gap={4}>\n              {navitems.map((nav, index) => {\n                return (\n                  <Link\n                    key={index}\n                    href={nav.href}\n                    border={0}\n                    color=\"brand\"\n                    p={2}\n                    _hover={{ bg: 'brand.muted', textDecoration: 'none' }}\n                  >\n                    {nav.icon}\n                    {nav.label}\n                  </Link>\n                )\n              })}\n              <ColorModeButton\n                borderWidth={'1px'}\n                borderRadius={'md'}\n                borderColor={'border'}\n                _hover={{ bg: 'brand.muted' }}\n              />\n            </Stack>\n          </Box>\n        )}\n      </Box>\n    </MyContainer>\n  )\n}\ntype NavLink = {\n  label: string\n  icon: React.ReactNode\n  href: string\n}\nconst navitems: NavLink[] = [\n  {\n    label: 'Home',\n    icon: <IoHomeOutline />,\n    href: '#about',\n  },\n  {\n    label: 'Projects',\n    icon: <PiProjectorScreen />,\n    href: '#projects',\n  },\n  {\n    label: 'Work',\n    icon: <IoBriefcaseOutline />,\n    href: '#work',\n  },\n  {\n    label: 'Contact',\n    icon: <IoMailOpenOutline />,\n    href: '#contact',\n  },\n]\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/fira_sans_8ba71798.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"fira_sans_8ba71798-module__6RELsG__className\",\n  \"variable\": \"fira_sans_8ba71798-module__6RELsG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/fira_sans_8ba71798.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22provider.tsx%22,%22import%22:%22Fira_Sans%22,%22arguments%22:[{%22variable%22:%22--font-body%22,%22weight%22:[%22400%22],%22subsets%22:[%22latin%22]}],%22variableName%22:%22bodyFont%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Fira Sans', 'Fira Sans Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,kJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,kJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,kJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/ui/provider.tsx"],"sourcesContent":["'use client'\n\nimport { ChakraProvider, createSystem, defaultConfig } from '@chakra-ui/react'\nimport { ColorModeProvider, ColorModeProviderProps } from './color-mode'\nimport { Fira_Sans as BodyFont } from 'next/font/google'\n\n// *** Fonts ***\nexport const bodyFont = BodyFont({\n  variable: '--font-body',\n  weight: ['400'],\n  subsets: ['latin'],\n})\n\nexport const system = createSystem(defaultConfig, {\n  globalCss: {\n    'html , body': {\n      lineHeight: '1.2',\n      scrollBehavior: 'smooth',\n    },\n    '::-webkit-scrollbar': {\n      width: '10px',\n      zIndex: '1',\n    },\n\n    /* Track */\n    '::-webkit-scrollbar-track': {\n      bg: 'var(--chakra-colors-brand-bg)',\n    },\n    /* Handle */\n    '::-webkit-scrollbar-thumb': {\n      bg: 'var(--chakra-colors-brand-emphasized)',\n      borderRadius: '10px',\n    },\n    /* Handle on hover */\n    '::-webkit-scrollbar-thumb:hover': {\n      bg: 'var(--chakra-colors-brand-secondary)',\n    },\n  },\n  theme: {\n    tokens: {\n      fonts: {\n        heading: { value: bodyFont.style.fontFamily },\n        body: { value: bodyFont.style.fontFamily },\n      },\n    },\n    semanticTokens: {\n      colors: {\n        brand: {\n          default: {\n            value: { _light: '#0f172a', _dark: '#E1E7EF' },\n          },\n          secondary: {\n            value: { _light: '#7f8EA3', _dark: '#7f8EA3' },\n          },\n          subtel: {\n            value: { _light: 'colors.gray.800', _dark: 'colors.gray.200' },\n          },\n          muted: {\n            value: { _light: 'colors.gray.50', _dark: 'colors.gray.950' },\n          },\n          emphasized: {\n            value: { _light: 'colors.gray.300', _dark: 'colors.gray.700' },\n          },\n          bg: {\n            value: { _light: 'white', _dark: 'colors.bg' },\n          },\n        },\n      },\n    },\n  },\n})\n\nexport function Provider(props: ColorModeProviderProps) {\n  return (\n    <ChakraProvider value={system}>\n      <ColorModeProvider {...props} />\n    </ChakraProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AACA;;;;;;AAHA;;;;;AAaO,MAAM,SAAS,CAAA,GAAA,8IAAA,CAAA,eAAY,AAAD,EAAE,8IAAA,CAAA,gBAAa,EAAE;IAChD,WAAW;QACT,eAAe;YACb,YAAY;YACZ,gBAAgB;QAClB;QACA,uBAAuB;YACrB,OAAO;YACP,QAAQ;QACV;QAEA,SAAS,GACT,6BAA6B;YAC3B,IAAI;QACN;QACA,UAAU,GACV,6BAA6B;YAC3B,IAAI;YACJ,cAAc;QAChB;QACA,mBAAmB,GACnB,mCAAmC;YACjC,IAAI;QACN;IACF;IACA,OAAO;QACL,QAAQ;YACN,OAAO;gBACL,SAAS;oBAAE,OAAO,sIAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,UAAU;gBAAC;gBAC5C,MAAM;oBAAE,OAAO,sIAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,UAAU;gBAAC;YAC3C;QACF;QACA,gBAAgB;YACd,QAAQ;gBACN,OAAO;oBACL,SAAS;wBACP,OAAO;4BAAE,QAAQ;4BAAW,OAAO;wBAAU;oBAC/C;oBACA,WAAW;wBACT,OAAO;4BAAE,QAAQ;4BAAW,OAAO;wBAAU;oBAC/C;oBACA,QAAQ;wBACN,OAAO;4BAAE,QAAQ;4BAAmB,OAAO;wBAAkB;oBAC/D;oBACA,OAAO;wBACL,OAAO;4BAAE,QAAQ;4BAAkB,OAAO;wBAAkB;oBAC9D;oBACA,YAAY;wBACV,OAAO;4BAAE,QAAQ;4BAAmB,OAAO;wBAAkB;oBAC/D;oBACA,IAAI;wBACF,OAAO;4BAAE,QAAQ;4BAAS,OAAO;wBAAY;oBAC/C;gBACF;YACF;QACF;IACF;AACF;AAEO,SAAS,SAAS,KAA6B;IACpD,qBACE,qKAAC,8IAAA,CAAA,iBAAc;QAAC,OAAO;kBACrB,cAAA,qKAAC,kIAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC"}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/pages/_app.tsx"],"sourcesContent":["import Navbar from '@/components/navbar'\n// import SizeIndicator from '@/components/SizeIndicator'\nimport { MyContainer } from '@/components/ui/container'\nimport { Provider } from '@/components/ui/provider'\nimport type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <Provider>\n      <Navbar />\n      <MyContainer>\n        <Component {...pageProps} />\n      </MyContainer>\n      {/* <SizeIndicator /> */}\n    </Provider>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA,yDAAyD;AACzD;AACA;AAAA;;;;;;;;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,6IAAA,CAAA,WAAQ;;0BACP,qKAAC,qHAAA,CAAA,UAAM;;;;;0BACP,qKAAC,8HAAA,CAAA,cAAW;0BACV,cAAA,qKAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;AAKhC"}},
    {"offset": {"line": 945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/components/chakra-next.tsx"],"sourcesContent":["import { Link as ChakraLink, LinkProps as ChakraLinkProps } from '@chakra-ui/react'\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link'\n\ninterface CNLinkProps extends ChakraLinkProps {\n  href: string\n  children: React.ReactNode\n  nextProps?: Omit<NextLinkProps, 'href'>\n}\n\nexport const CNLink = ({ href, nextProps, children, ...props }: CNLinkProps) => {\n  return (\n    <ChakraLink {...props} asChild>\n      <NextLink href={href} {...nextProps}>\n        {children}\n      </NextLink>\n    </ChakraLink>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;AAQO,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAoB;IACzE,qBACE,qKAAC,8IAAA,CAAA,OAAU;QAAE,GAAG,KAAK;QAAE,OAAO;kBAC5B,cAAA,qKAAC,qHAAA,CAAA,UAAQ;YAAC,MAAM;YAAO,GAAG,SAAS;sBAChC;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/data/project.data.tsx"],"sourcesContent":["export type Projects = {\n  title: string\n  description: string\n  href: string\n}\n\nexport const projectsData: Projects[] = [\n  // {\n  //   title: 'Task Manager App',\n  //   description:\n  //     'A simple task management application to create, update, and delete tasks with a clean UI.',\n  //   href: '#',\n  // },\n  {\n    title: 'URL Shortner Web App',\n    description:\n      'A minimal MERN app to shorten URLs with custom aliases and click tracking.',\n    href: '#',\n  },\n  {\n    title: 'MasterJi - Online Learning Platform',\n    description:\n      'MasterJi is an AI-powered online learning platform offering personalized lessons, interactive videos, and smart assessments to make education engaging and effective.',\n    href: '#',\n  },\n  {\n    title: 'Personal Portfolio Website',\n    description:\n      'A personal portfolio website showcasing projects, skills, and experience with a modern design.',\n    href: '#',\n  },\n]\n"],"names":[],"mappings":";;;AAMO,MAAM,eAA2B;IACtC,IAAI;IACJ,+BAA+B;IAC/B,iBAAiB;IACjB,mGAAmG;IACnG,eAAe;IACf,KAAK;IACL;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;IACA;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;IACA;QACE,OAAO;QACP,aACE;QACF,MAAM;IACR;CACD"}},
    {"offset": {"line": 1017, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/libs/data/work.data.tsx"],"sourcesContent":["// // export type Work = {\n// //   company: string\n// //   deliverable: string[]\n// //   fromDate: string\n// //   toDate: string\n// // }\n\n// // export const worksData: Work[] = [\n// //   {\n// //     company: 'Delta Crops Ltd.',\n// //     deliverable: [\n// //       'Developed a web application to manage the company’s inventory and sales.',\n// //       'Implemented a barcode scanner to track inventory.',\n// //     ],\n// //     fromDate: '2022-04',\n// //     toDate: 'Present',\n// //   },\n// //   {\n// //     company: 'NextGen Software',\n// //     deliverable: [\n// //       'Developed a full-stack e-commerce platform with product listings, cart functionality, and payment integration.',\n// //       'Integrated a payment gateway for seamless transactions.',\n// //     ],\n// //     fromDate: '2017-08',\n// //     toDate: '2019-02',\n// //   },\n// // ]\n\n\n\n\n// // export type Work = {\n// //   company: string;\n// //   position?: string; // Added 'position' as an optional field to better describe roles like \"Intern\" or \"Team Lead\" for hackathons.\n// //   deliverable: string[];\n// //   fromDate: string;\n// //   toDate: string;\n// // };\n\n// // export const worksData: Work[] = [\n// //   // --- Internships (2 entries) ---\n// //   {\n// //     company: 'Tech Rover Solutions Pvt Ltd', // Replace with actual company name\n// //     position: 'Generative AI Intern',\n// //     deliverable: [\n// //       'Developed and fine-tuned a custom large language model (LLM) for specific industry tasks using PyTorch and Hugging Face Transformers.',\n// //       'Implemented RAG (Retrieval-Augmented Generation) pipeline to enhance LLM responses with real-time data.',\n// //       'Contributed to the development of a Streamlit-based prototype showcasing AI capabilities.',\n// //       'Collaborated with senior researchers on optimizing model inference speed on cloud platforms.',\n// //     ],\n// //     fromDate: '2024-06', // Example dates: June 2024\n// //     toDate: '2024-09', // Example dates: September 2024\n// //   },\n// //   {\n// //     company: 'Noble University of Engineering', // IMPORTANT: Replace with your actual university name\n// //     position: 'Software Development Intern (Academic Project)',\n// //     deliverable: [\n// //       'Contributed to a research project on real-time data visualization by building interactive dashboards using React and D3.js.',\n// //       'Assisted in designing and implementing RESTful APIs with Flask for data backend.',\n// //       'Wrote comprehensive unit and integration tests, increasing code coverage by 15%.',\n// //     ],\n// //     fromDate: '2023-01', // Example dates: January 2023\n// //     toDate: '2023-05', // Example dates: May 2023\n// //   },\n\n// //   // --- Hackathons (4 entries, including 2 winners/runner-ups) ---\n\n// //   // Hackathon 1 (Winner/Runner-up)\n// //   {\n// //     company: 'University Hackathon 2024', // Replace with actual hackathon name and year\n// //     position: 'Team Lead - Runner-Up (Top 5%)', // Or 'Winner' / 'First Place'\n// //     deliverable: [\n// //       'Developed an AI-powered real-time sign language translator using TensorFlow and custom computer vision models in just 48 hours.',\n// //       'Achieved 92% accuracy on the test set for key functionality.',\n// //       'Presented solution to a panel of industry experts, receiving commendation for innovation and technical execution.',\n// //     ],\n// //     fromDate: '2024-03-15', // Specific start date of hackathon\n// //     toDate: '2024-03-17', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 2 (Winner/Runner-up)\n// //   {\n// //     company: 'CodeFest 2023', // Replace with actual hackathon name and year\n// //     position: 'Participant - Winner (Best Use of Google Cloud API)', // e.g., 'Best Use of [Specific Technology/API]'\n// //     deliverable: [\n// //       'Built a blockchain-based supply chain tracker prototype from scratch, incorporating smart contracts on Ethereum.',\n// //       'Successfully integrated Chainlink for data oracle services.',\n// //       'Collaborated effectively within a team of 4 developers under tight deadlines.',\n// //     ],\n// //     fromDate: '2023-10-20', // Specific start date of hackathon\n// //     toDate: '2023-10-22', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 3 (General Participation)\n// //   {\n// //     company: 'Data Science Challenge 2023', // Replace with actual hackathon name and year\n// //     position: 'Data Analyst / ML Engineer',\n// //     deliverable: [\n// //       'Analyzed a large dataset of customer purchasing behavior to identify key trends and predict churn risk.',\n// //       'Developed predictive models using scikit-learn and performed extensive data visualization using Matplotlib.',\n// //       'Contributed to the team\\'s final report and presentation of insights.',\n// //     ],\n// //     fromDate: '2023-07-07', // Specific start date of hackathon\n// //     toDate: '2023-07-09', // Specific end date of hackathon\n// //   },\n// //   // Hackathon 4 (General Participation)\n// //   {\n// //     company: 'WebDev Sprint 2022', // Replace with actual hackathon name and year\n// //     position: 'Front-End Developer',\n// //     deliverable: [\n// //       'Designed and implemented the user interface for a local community platform using React and Chakra UI.',\n// //       'Ensured responsive design across various devices and optimized for performance.',\n// //       'Collaborated with backend developers to integrate API endpoints for dynamic content loading.',\n// //     ],\n// //     fromDate: '2022-04-01', // Specific start date of hackathon\n// //     toDate: '2022-04-03', // Specific end date of hackathon\n// //   },\n// // ];\n\n\n\n\n// // ai code testing\n\n// export type Work = {\n//   company: string;\n//   position?: string;\n//   deliverable: string[];\n//   fromDate: string;\n//   toDate: string;\n// };\n\n// export const worksData: Work[] = [\n//   // --- Internships (2 entries) ---\n//   {\n//     company: 'Tech Rover Solutions Pvt Ltd', // Example Company (Gen AI focused, easier level)\n//     position: 'Junior AI Development Intern',\n//     deliverable: [\n//       'Utilized OpenAI and Hugging Face APIs to build simple text generation and image recognition prototypes.',\n//       'Assisted in preparing and cleaning datasets for training small custom models.',\n//       'Developed basic web interfaces using Streamlit for demonstrating AI functionalities.',\n//       'Explored various pre-trained models and their applications for content creation.',\n//     ],\n//     fromDate: '2024-06',\n//     toDate: '2024-09',\n//   },\n//   {\n//     company: 'Noble University Tech Dept.', // University Internship (Development, intermediate level)\n//     position: 'Software Development Intern',\n//     deliverable: [\n//       'Developed and optimized backend APIs using Node.js and Express, handling moderate data loads and ensuring data integrity.',\n//       'Integrated third-party services and payment gateways for a university project, managing API keys and securing transactions.',\n//       'Implemented front-end components with React, focusing on reusable components and state management.',\n//       'Participated in code reviews and contributed to improving team coding standards.',\n//     ],\n//     fromDate: '2023-01',\n//     toDate: '2023-05',\n//   },\n\n//   // --- Hackathons (4 entries, including 2 winners/runner-ups) ---\n\n//   // Hackathon 1 (Winner/Runner-up - Gen AI Easy Level)\n//   {\n//     company: 'AI Challenge Hackathon 2025', // e.g., 'AI Challenge Hackathon 2024'\n//     position: 'Team Lead - Winner (Most Creative AI App)', // Or 'Runner-Up'\n//     deliverable: [\n//       'Developed a novel AI application that [briefly describe, e.g., \"generates personalized bedtime stories\"] using pre-trained language models and a simple prompt engineering approach.',\n//       'Integrated a basic text-to-speech API to enhance user experience within the 48-hour timeframe.',\n//       'Designed an intuitive user interface for easy interaction with the AI model.',\n//     ],\n//     fromDate: '2024-03-15',\n//     toDate: '2024-03-17',\n//   },\n//   // Hackathon 2 (Winner/Runner-up - Development Intermediate Level)\n//   {\n//     company: 'Smart City Hack 2024', // e.g., 'Smart City Hack 2023'\n//     position: 'Full Stack Engineer - Runner-Up (Best Solution for Urban Planning)',\n//     deliverable: [\n//       'Built a data visualization platform displaying real-time city data using Next.js and a Flask backend.',\n//       'Implemented robust data filtering and search functionalities, handling complex queries efficiently.',\n//       'Deployed the application using Docker containers, ensuring cross-platform compatibility.',\n//       'Optimized database queries for PostgreSQL, achieving fast load times for large datasets.',\n//     ],\n//     fromDate: '2023-10-20',\n//     toDate: '2023-10-22',\n//   },\n//    {\n//     company: 'Prompt Pioneers Fest 2023',\n//     position: 'AI Prompt Engineer',\n//     deliverable: [\n//       'Experimented with various prompting techniques, including role-playing and constraint-based prompting, to guide large language models (e.g., LLaMA 2) to generate specific marketing copy for fictional products.',\n//       'Evaluated the quality and relevance of AI-generated marketing outputs based on predefined criteria like persuasiveness and clarity, improving average score by 10%.',\n//       'Documented effective prompt strategies and shared a detailed guide on best practices for creative content generation with the hackathon team members.',\n//     ],\n//     fromDate: '2023-07-07',\n//     toDate: '2023-07-09',\n//   },\n  \n//   // Hackathon 4 (General Participation - Development Intermediate Level)\n//   {\n//     company: 'Open Source Contribution Gujarat Institute of Technology', // e.g., 'Open Source Contribution Hack 2022'\n//     position: 'Software Development Intern (Academic Project)',\n//     deliverable: [\n//       'Developed and optimized backend APIs for an online library management system using Node.js and Express, handling up to 100 concurrent requests.',\n//       'Integrated third-party services like Stripe for payment processing for a university event management platform, managing API keys securely.',\n//       'Implemented responsive front-end components for a student portal with React and Chakra UI, enhancing user navigation.',\n//       'Participated in daily stand-ups and contributed to improving team coding standards by documenting best practices for API design.',\n//     ],\n//     fromDate: '2022-04-01',\n//     toDate: '2022-04-03',\n//   },\n// ];\n\n\n\n\n// export type Work = {\n//   company: string;\n//   position?: string;\n//   deliverable: string[];\n//   fromDate: string;\n//   toDate: string;\n// };\n\n\n\n\n\nexport type Work = {\n  company: string;\n  position?: string;\n  deliverable: string[];\n  fromDate: string;\n  toDate: string;\n};\n\nexport const worksData: Work[] = [\n  {\n    company: 'Tech Rover – Web Development Internship',\n    position: 'Frontend Intern',\n    deliverable: [\n      'Worked on developing web interfaces using React and Tailwind CSS.',\n      'Assisted in creating responsive UI components for real client projects.',\n      'Collaborated with senior developers on improving application performance and usability.'\n    ],\n    fromDate: '2024-01',\n    toDate: '2024-02',\n  },\n  {\n    company: 'IIT Madras – Full Stack Web Dev with GenAI (by Coding Ninjas)',\n    position: 'Full Stack Intern',\n    deliverable: [\n      'Completed an internship focused on building full-stack web applications with integrated GenAI features.',\n      'Developed projects using React, Node.js, and MongoDB with OpenAI APIs for intelligent features.',\n      'Built a chatbot module using Generative AI and prompt engineering concepts.',\n      'Learned deployment practices and participated in weekly evaluations and mentorship sessions.'\n    ],\n    fromDate: '2023-05',\n    toDate: '2026-09',\n  },\n  // {\n  //   company: 'AI Hackathon – College Level',\n  //   position: 'Hackathon Participant',\n  //   deliverable: [\n  //     'Participated in a 48-hour college hackathon focused on AI-powered solutions.',\n  //     'Worked on a team project that used OpenAI API for generating personalized content.',\n  //     'Contributed to both backend integration and frontend UI/UX design.'\n  //   ],\n  //   fromDate: '2025-03-15',\n  //   toDate: '2025-03-17',\n  // },\n\n   {\n    company: 'College Level Hackathon',\n    position: 'Team Project Developer',\n    deliverable: [\n      'Participated in a 48-hour hackathon organized at the college level.',\n      'Built a web-based educational game designed to teach the fundamental concepts of programming and visual effects.',\n      'Focused on making the platform beginner-friendly and accessible to non-technical users.',\n      'Collaborated with teammates to ensure engaging design, interactivity, and learning effectiveness.'\n    ],\n    fromDate: '2025-01-09',\n    toDate: '2025-01-11',\n  },\n];\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeel/Documents/GitHub/deltacode/simple-portfolio/src/pages/index.tsx"],"sourcesContent":["// 'use client'\n// import { CNLink } from '@/components/chakra-next'\n// import { siteConfig } from '@/libs/configs/site.config'\n// import { projectsData } from '@/libs/data/project.data'\n// import { worksData } from '@/libs/data/work.data'\n// import {\n//   Box,\n//   Button,\n//   Center,\n//   Flex,\n//   Heading,\n//   HStack,\n//   Separator,\n//   SimpleGrid,\n//   Stack,\n//   Text,\n// } from '@chakra-ui/react'\n// import { IconType } from 'react-icons'\n// import { AiOutlineOpenAI } from 'react-icons/ai'\n// import {\n//   BiLogoFirebase,\n//   BiLogoFlask,\n//   BiLogoMongodb,\n//   BiLogoRedux,\n//   BiLogoTailwindCss,\n//   BiLogoTypescript,\n// } from 'react-icons/bi'\n// import {\n//   FaAws,\n//   FaCss3,\n//   FaDocker,\n//   FaGitAlt,\n//   FaGithub,\n//   FaHtml5,\n//   FaLinkedin,\n//   FaNodeJs,\n//   FaPython,\n//   FaReact,\n// } from 'react-icons/fa'\n// import { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\n// import { IoMdCheckmarkCircleOutline } from 'react-icons/io'\n// import { IoLogoJavascript } from 'react-icons/io5'\n// import { RiNextjsFill } from 'react-icons/ri'\n// import { SiExpress, SiMui, SiPrisma } from 'react-icons/si'\n\n// export default function Home() {\n//   return (\n//     <>\n//       <title>{siteConfig.profile.name}</title>\n//       <meta name=\"description\" content={siteConfig.profile.about} />\n//       <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n//       <Flex\n//         gap={4}\n//         flexDirection={{\n//           base: 'column',\n//           lg: 'row',\n//         }}\n//       >\n//         <Box\n//           width={{\n//             base: '100%',\n//             lg: '40%',\n//           }}\n//         >\n//           <About />\n//         </Box>\n//         <Stack gap={10} flex={1}>\n//           <TechStack />\n//           <Projects />\n//           <Work />\n//           <Contact />\n//         </Stack>\n//       </Flex>\n//     </>\n//   )\n// }\n\n// const About = () => {\n//   const socials: {\n//     Icon: IconType\n//     href: string\n//     title: string\n//   }[] = [\n//     {\n//       Icon: FaGithub,\n//       href: siteConfig.social.githubHref,\n//       title: 'Github',\n//     },\n//     {\n//       Icon: FaXTwitter,\n//       href: siteConfig.social.twitterHref,\n//       title: 'Twitter',\n//     },\n//     {\n//       Icon: FaLinkedin,\n//       href: siteConfig.social.linkedinHref,\n//       title: 'LinkedIn',\n//     },\n//   ]\n//   return (\n//     <Stack\n//       p={6}\n//       gap={4}\n//       borderWidth=\"1px\"\n//       borderColor=\"gray.subtel\"\n//       borderRadius=\"md\"\n//       height={'fit-content'}\n//       position={{ md: 'sticky' }}\n//       top={{ md: 24 }}\n//     >\n//       <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n//         {siteConfig.profile.name}\n//       </Heading>\n//       <Text fontSize={'sm'} color={'brand.secondary'}>\n//         {siteConfig.profile.about}\n//       </Text>\n//       <Center>\n//         {socials.map((item) => (\n//           <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n//             <CNLink href={item.href} color={'Brand'}>\n//               <item.Icon />\n//             </CNLink>\n//           </Button>\n//         ))}\n//       </Center>\n//       <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n//         <Flex justifyContent={'space-between'} gap={2}>\n//           <Flex direction=\"column\" flex={1}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.experience}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Experience\n//             </Text>\n//           </Flex>\n//           <Flex direction=\"column\" flex={1} textAlign={'right'}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.location}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Location\n//             </Text>\n//           </Flex>\n//         </Flex>\n//         <Button borderRadius={'md'}>\n//           <IoMdCheckmarkCircleOutline />\n//           Hire me\n//         </Button>\n//       </Flex>\n//     </Stack>\n//   )\n// }\n\n// const TechStack = () => {\n//   const items = [\n//     { name: 'TypeScript', badge: <BiLogoTypescript /> },\n//     { name: 'JavaScript', badge: <IoLogoJavascript /> },\n//     { name: 'React', badge: <FaReact /> },\n//     { name: 'Next', badge: <RiNextjsFill /> },\n//     { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n//     { name: 'Redux', badge: <BiLogoRedux /> },\n//     { name: 'Flask', badge: <BiLogoFlask /> },\n//     { name: 'HTML5', badge: <FaHtml5 /> },\n//     { name: 'CSS3', badge: <FaCss3 /> },\n//     { name: 'Node', badge: <FaNodeJs /> },\n//     { name: 'Express', badge: <SiExpress /> },\n//     { name: 'Python', badge: <FaPython /> },\n//     { name: 'MongoDB', badge: <BiLogoMongodb /> },\n//     { name: 'AWS', badge: <FaAws /> },\n//     { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n//     { name: 'Firebase', badge: <BiLogoFirebase /> },\n//     { name: 'Git', badge: <FaGitAlt /> },\n//     { name: 'Docker', badge: <FaDocker /> },\n//     { name: 'Prisma', badge: <SiPrisma /> },\n//     { name: 'MUI', badge: <SiMui /> },\n//   ]\n\n//   return (\n//     <Stack gap={4} id=\"home\">\n//       <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n//         Tech Stack\n//       </Heading>\n//       <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n//         {items.map((tech, index) => {\n//           return (\n//             <Button\n//               key={index}\n//               variant={'outline'}\n//               _hover={{ bg: 'brand.muted' }}\n//               color={'brand'}\n//               borderColor={'gray.subtel'}\n//             >\n//               {tech.badge}\n//               {tech.name}\n//             </Button>\n//           )\n//         })}\n//       </SimpleGrid>\n//     </Stack>\n//   )\n// }\n\n// const Projects = () => {\n//   return (\n//     <Stack gap={4} id=\"projects\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Projects\n//       </Heading>\n//       {projectsData.map((project, index) => {\n//         return (\n//           <CNLink\n//             key={index}\n//             href={project.href}\n//             borderWidth={'1px'}\n//             borderColor={'gray.subtel'}\n//             _focus={{\n//               textDecoration: 'none',\n//               boxShadow: 'none',\n//               borderColor: 'brand.emphasized',\n//               border: 'none',\n//             }}\n//             borderRadius={'md'}\n//             p={6}\n//             _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n//             target=\"_blank\"\n//           >\n//             <Stack alignItems=\"start\">\n//               <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                 {project.title}\n//               </Heading>\n//               <Text color=\"brand.secondary\" fontSize={'sm'}>\n//                 {project.description}\n//               </Text>\n//             </Stack>\n//           </CNLink>\n//         )\n//       })}\n//     </Stack>\n//   )\n// }\n\n// const Work = () => {\n//   return (\n//     <Stack gap={4} id=\"work\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Work\n//       </Heading>\n//       <Stack\n//         gap={5}\n//         p={6}\n//         borderWidth={'1px'}\n//         borderColor={'gray.subtel'}\n//         borderRadius={'lg'}\n//         separator={<Separator opacity={1} color={'brand'} />}\n//       >\n//         {worksData.map((work, index) => {\n//           return (\n//             <Stack gap={4} key={index} direction=\"column\">\n//               <Flex justify={'space-between'} alignItems={'end'}>\n//                 <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                   {work.company}\n//                 </Heading>\n//                 <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//                   <FaRegCalendarDays size={14} />\n//                   <Text fontSize={'xs'} color={'brand'}>\n//                     {work.fromDate} - {work.toDate}\n//                   </Text>\n//                 </HStack>\n//               </Flex>\n//               <Stack\n//                 fontSize={'sm'}\n//                 color={'brand.secondary'}\n//                 as={'ul'}\n//                 listStyleType={'disc'}\n//                 ml={4}\n//               >\n//                 {work.deliverable.map((item, index) => (\n//                   <li key={index}>{item}</li>\n//                 ))}\n//               </Stack>\n//             </Stack>\n//           )\n//         })}\n//       </Stack>\n//     </Stack>\n//   )\n// }\n\n// const Contact = () => {\n//   return (\n//     <Stack gap={6} marginBottom={10} id=\"contact\">\n//       <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n//         Contact\n//       </Heading>\n//       <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//         <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n//           Best way to reach me is through:{' '}\n//           <CNLink\n//             _hover={{ color: 'brand' }}\n//             color={'brand.secondary'}\n//             _focus={{ boxShadow: 'none' }}\n//             href={siteConfig.contact.emailHref}\n//           >\n//             {siteConfig.contact.email}\n//           </CNLink>\n//         </Text>\n//       </Box>\n//     </Stack>\n//   )\n// }\n\n\n\n\n\n// ai code testing\n\n// 'use client'\n// import { CNLink } from '@/components/chakra-next'\n// import { siteConfig } from '@/libs/configs/site.config'\n// import { projectsData } from '@/libs/data/project.data'\n// import { worksData } from '@/libs/data/work.data'\n// import {\n//   Box,\n//   Button,\n//   Center,\n//   Flex,\n//   Heading,\n//   HStack,\n//   Separator,\n//   SimpleGrid,\n//   Stack,\n//   Text,\n// } from '@chakra-ui/react'\n// import { IconType } from 'react-icons'\n// import { AiOutlineOpenAI } from 'react-icons/ai'\n// import {\n//   BiLogoFirebase,\n//   BiLogoFlask,\n//   BiLogoMongodb,\n//   BiLogoRedux,\n//   BiLogoTailwindCss,\n//   BiLogoTypescript,\n// } from 'react-icons/bi'\n// import {\n//   FaAws,\n//   FaCss3,\n//   FaDocker,\n//   FaGitAlt,\n//   FaGithub,\n//   FaHtml5,\n//   FaLinkedin,\n//   FaNodeJs,\n//   FaPython,\n//   FaReact,\n// } from 'react-icons/fa'\n// import { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\n// import { IoMdCheckmarkCircleOutline } from 'react-icons/io'\n// import { IoLogoJavascript } from 'react-icons/io5'\n// import { RiNextjsFill } from 'react-icons/ri'\n// import {\n//   SiExpress,\n//   SiMui,\n//   SiPrisma,\n//   SiHuggingface, // Added Hugging Face icon\n//   SiPytorch, // Added PyTorch icon\n//   SiTensorflow, // Added TensorFlow icon\n//   SiLangchain, // Added LangChain icon\n// } from 'react-icons/si'\n\n// export default function Home() {\n//   return (\n//     <>\n//       <title>{siteConfig.profile.name}</title>\n//       <meta name=\"description\" content={siteConfig.profile.about} />\n//       <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n//       <Flex\n//         gap={4}\n//         flexDirection={{\n//           base: 'column',\n//           lg: 'row',\n//         }}\n//       >\n//         <Box\n//           width={{\n//             base: '100%',\n//             lg: '40%',\n//           }}\n//         >\n//           <About />\n//         </Box>\n//         <Stack gap={10} flex={1}>\n//           <TechStack />\n//           <Projects />\n//           <Work />\n//           <Contact />\n//         </Stack>\n//       </Flex>\n//     </>\n//   )\n// }\n\n// const About = () => {\n//   const socials: {\n//     Icon: IconType\n//     href: string\n//     title: string\n//   }[] = [\n//     {\n//       Icon: FaGithub,\n//       href: siteConfig.social.githubHref,\n//       title: 'Github',\n//     },\n//     {\n//       Icon: FaXTwitter,\n//       href: siteConfig.social.twitterHref,\n//       title: 'Twitter',\n//     },\n//     {\n//       Icon: FaLinkedin,\n//       href: siteConfig.social.linkedinHref,\n//       title: 'LinkedIn',\n//     },\n//   ]\n//   return (\n//     <Stack\n//       p={6}\n//       gap={4}\n//       borderWidth=\"1px\"\n//       borderColor=\"gray.subtel\"\n//       borderRadius=\"md\"\n//       height={'fit-content'}\n//       position={{ md: 'sticky' }}\n//       top={{ md: 24 }}\n//     >\n//       <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n//         {siteConfig.profile.name}\n//       </Heading>\n//       <Text fontSize={'sm'} color={'brand.secondary'}>\n//         {siteConfig.profile.about}\n//       </Text>\n//       <Center>\n//         {socials.map((item) => (\n//           <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n//             <CNLink href={item.href} color={'Brand'}>\n//               <item.Icon />\n//             </CNLink>\n//           </Button>\n//         ))}\n//       </Center>\n//       <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n//         <Flex justifyContent={'space-between'} gap={2}>\n//           <Flex direction=\"column\" flex={1}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.experience}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Experience\n//             </Text>\n//           </Flex>\n//           <Flex direction=\"column\" flex={1} textAlign={'right'}>\n//             <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n//               {siteConfig.profile.location}\n//             </Heading>\n//             <Text fontSize=\"xs\" color=\"brand.secondary\">\n//               Location\n//             </Text>\n//           </Flex>\n//         </Flex>\n//         <Button borderRadius={'md'}>\n//           <IoMdCheckmarkCircleOutline />\n//           Hire me\n//         </Button>\n//       </Flex>\n//     </Stack>\n//   )\n// }\n\n// const TechStack = () => {\n//   const items = [\n//     { name: 'TypeScript', badge: <BiLogoTypescript /> },\n//     { name: 'JavaScript', badge: <IoLogoJavascript /> },\n//     { name: 'React', badge: <FaReact /> },\n//     { name: 'Next', badge: <RiNextjsFill /> },\n//     { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n//     { name: 'Redux', badge: <BiLogoRedux /> },\n//     { name: 'Flask', badge: <BiLogoFlask /> },\n//     { name: 'HTML5', badge: <FaHtml5 /> },\n//     { name: 'CSS3', badge: <FaCss3 /> },\n//     { name: 'Node', badge: <FaNodeJs /> },\n//     { name: 'Express', badge: <SiExpress /> },\n//     { name: 'Python', badge: <FaPython /> },\n//     { name: 'MongoDB', badge: <BiLogoMongodb /> },\n//     { name: 'AWS', badge: <FaAws /> },\n//     // Generative AI Tech Stack Additions\n//     { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n//     { name: 'Hugging Face', badge: <SiHuggingface /> },\n//     { name: 'PyTorch', badge: <SiPytorch /> },\n//     { name: 'TensorFlow', badge: <SiTensorflow /> },\n//     { name: 'LangChain', badge: <SiLangchain /> },\n//     // End Generative AI Tech Stack Additions\n//     { name: 'Firebase', badge: <BiLogoFirebase /> },\n//     { name: 'Git', badge: <FaGitAlt /> },\n//     { name: 'Docker', badge: <FaDocker /> },\n//     { name: 'Prisma', badge: <SiPrisma /> },\n//     { name: 'MUI', badge: <SiMui /> },\n//   ]\n\n//   return (\n//     <Stack gap={4} id=\"home\">\n//       <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n//         Tech Stack\n//       </Heading>\n//       <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n//         {items.map((tech, index) => {\n//           return (\n//             <Button\n//               key={index}\n//               variant={'outline'}\n//               _hover={{ bg: 'brand.muted' }}\n//               color={'brand'}\n//               borderColor={'gray.subtel'}\n//             >\n//               {tech.badge}\n//               {tech.name}\n//             </Button>\n//           )\n//         })}\n//       </SimpleGrid>\n//     </Stack>\n//   )\n// }\n\n// const Projects = () => {\n//   return (\n//     <Stack gap={4} id=\"projects\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Projects\n//       </Heading>\n//       {projectsData.map((project, index) => {\n//         return (\n//           <CNLink\n//             key={index}\n//             href={project.href}\n//             borderWidth={'1px'}\n//             borderColor={'gray.subtel'}\n//             _focus={{\n//               textDecoration: 'none',\n//               boxShadow: 'none',\n//               borderColor: 'brand.emphasized',\n//               border: 'none',\n//             }}\n//             borderRadius={'md'}\n//             p={6}\n//             _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n//             target=\"_blank\"\n//           >\n//             <Stack alignItems=\"start\">\n//               <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                 {project.title}\n//               </Heading>\n//               <Text color=\"brand.secondary\" fontSize={'sm'}>\n//                 {project.description}\n//               </Text>\n//             </Stack>\n//           </CNLink>\n//         )\n//       })}\n//     </Stack>\n//   )\n// }\n\n// const Work = () => {\n//   return (\n//     <Stack gap={4} id=\"work\">\n//       <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n//         Work\n//       </Heading>\n//       <Stack\n//         gap={5}\n//         p={6}\n//         borderWidth={'1px'}\n//         borderColor={'gray.subtel'}\n//         borderRadius={'lg'}\n//         separator={<Separator opacity={1} color={'brand'} />}\n//       >\n//         {worksData.map((work, index) => {\n//           return (\n//             <Stack gap={4} key={index} direction=\"column\">\n//               <Flex justify={'space-between'} alignItems={'end'}>\n//                 <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n//                   {work.company}\n//                 </Heading>\n//                 <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//                   <FaRegCalendarDays size={14} />\n//                   <Text fontSize={'xs'} color={'brand'}>\n//                     {work.fromDate} - {work.toDate}\n//                   </Text>\n//                 </HStack>\n//               </Flex>\n//               <Stack\n//                 fontSize={'sm'}\n//                 color={'brand.secondary'}\n//                 as={'ul'}\n//                 listStyleType={'disc'}\n//                 ml={4}\n//               >\n//                 {work.deliverable.map((item, index) => (\n//                   <li key={index}>{item}</li>\n//                 ))}\n//               </Stack>\n//             </Stack>\n//           )\n//         })}\n//       </Stack>\n//     </Stack>\n//   )\n// }\n\n// const Contact = () => {\n//   return (\n//     <Stack gap={6} marginBottom={10} id=\"contact\">\n//       <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n//         Contact\n//       </Heading>\n//       <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n//         <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n//           Best way to reach me is through:{' '}\n//           <CNLink\n//             _hover={{ color: 'brand' }}\n//             color={'brand.secondary'}\n//             _focus={{ boxShadow: 'none' }}\n//             href={siteConfig.contact.emailHref}\n//           >\n//             {siteConfig.contact.email}\n//           </CNLink>\n//         </Text>\n//       </Box>\n//     </Stack>\n//   )\n// }\n\n\n\n\n// another ai code testing\n'use client'\nimport { CNLink } from '@/components/chakra-next'\nimport { siteConfig } from '@/libs/configs/site.config'\nimport { projectsData } from '@/libs/data/project.data'\nimport { worksData } from '@/libs/data/work.data'\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Separator,\n  SimpleGrid,\n  Stack,\n  Text,\n} from '@chakra-ui/react'\nimport { IconType } from 'react-icons'\nimport { AiOutlineOpenAI } from 'react-icons/ai'\nimport {\n  BiLogoFirebase,\n  BiLogoFlask,\n  BiLogoMongodb,\n  BiLogoRedux,\n  BiLogoTailwindCss,\n  BiLogoTypescript,\n  BiLogoPostgresql, // Added PostgreSQL icon\n  BiLogoKubernetes, // Added Kubernetes icon\n} from 'react-icons/bi'\nimport {\n  FaAws,\n  FaCss3,\n  FaDocker,\n  FaGitAlt,\n  FaGithub,\n  FaHtml5,\n  FaLinkedin,\n  FaNodeJs,\n  FaPython,\n  FaReact,\n} from 'react-icons/fa'\nimport { FaRegCalendarDays, FaXTwitter } from 'react-icons/fa6'\nimport { IoMdCheckmarkCircleOutline } from 'react-icons/io'\nimport { IoLogoJavascript } from 'react-icons/io5'\nimport { RiNextjsFill } from 'react-icons/ri'\nimport {\n  SiExpress,\n  SiMui,\n  SiPrisma,\n  SiHuggingface,\n  SiPytorch,\n  SiTensorflow,\n  SiLangchain,\n  SiGooglecloud, // Added Google Cloud icon (for Gen AI services like Vertex AI)\n  SiApacheairflow, // Added Apache Airflow icon (for MLOps/data orchestration)\n  SiKeras, // Added Keras icon (for deep learning, often used with TensorFlow)\n} from 'react-icons/si'\n\nexport default function Home() {\n  return (\n    <>\n      <title>{siteConfig.profile.name}</title>\n      <meta name=\"description\" content={siteConfig.profile.about} />\n      <meta name=\"keywords\" content={siteConfig.profile.keywords.join(',')} />\n      <Flex\n        gap={4}\n        flexDirection={{\n          base: 'column',\n          lg: 'row',\n        }}\n      >\n        <Box\n          width={{\n            base: '100%',\n            lg: '40%',\n          }}\n        >\n          <About />\n        </Box>\n        <Stack gap={10} flex={1}>\n          <TechStack />\n          <Projects />\n          <Work />\n          <Contact />\n        </Stack>\n      </Flex>\n    </>\n  )\n}\n\nconst About = () => {\n  const socials: {\n    Icon: IconType\n    href: string\n    title: string\n  }[] = [\n    {\n      Icon: FaGithub,\n      href: siteConfig.social.githubHref,\n      title: 'Github',\n    },\n    {\n      Icon: FaXTwitter,\n      href: siteConfig.social.twitterHref,\n      title: 'Twitter',\n    },\n    {\n      Icon: FaLinkedin,\n      href: siteConfig.social.linkedinHref,\n      title: 'LinkedIn',\n    },\n  ]\n  return (\n    <Stack\n      p={6}\n      gap={4}\n      borderWidth=\"1px\"\n      borderColor=\"gray.subtel\"\n      borderRadius=\"md\"\n      height={'fit-content'}\n      position={{ md: 'sticky' }}\n      top={{ md: 24 }}\n    >\n      <Heading as={'h1'} fontSize={'xl'} color={'brand'}>\n        {siteConfig.profile.name}\n      </Heading>\n      <Text fontSize={'sm'} color={'brand.secondary'}>\n        {siteConfig.profile.about}\n      </Text>\n      <Center>\n        {socials.map((item) => (\n          <Button key={item.title} variant={'outline'} p={2} borderRadius={'full'} border={0}>\n            <CNLink href={item.href} color={'Brand'}>\n              <item.Icon />\n            </CNLink>\n          </Button>\n        ))}\n      </Center>\n      <Flex direction={'column'} gap={4} justifyContent={'space-between'}>\n        <Flex justifyContent={'space-between'} gap={2}>\n          <Flex direction=\"column\" flex={1}>\n            <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n              {siteConfig.profile.experience}\n            </Heading>\n            <Text fontSize=\"xs\" color=\"brand.secondary\">\n              Experience\n            </Text>\n          </Flex>\n          <Flex direction=\"column\" flex={1} textAlign={'right'}>\n            <Heading as=\"h3\" fontSize=\"sm\" fontWeight=\"bold\" lineHeight=\"short\">\n              {siteConfig.profile.location}\n            </Heading>\n            <Text fontSize=\"xs\" color=\"brand.secondary\">\n              Location\n            </Text>\n          </Flex>\n        </Flex>\n        <Button borderRadius={'md'}>\n          <IoMdCheckmarkCircleOutline />\n          Hire me\n        </Button>\n      </Flex>\n    </Stack>\n  )\n}\n\nconst TechStack = () => {\n  const items = [\n    { name: 'TypeScript', badge: <BiLogoTypescript /> },\n    { name: 'JavaScript', badge: <IoLogoJavascript /> },\n    { name: 'React', badge: <FaReact /> },\n    { name: 'Next', badge: <RiNextjsFill /> },\n    { name: 'Tailwind', badge: <BiLogoTailwindCss /> },\n    { name: 'Redux', badge: <BiLogoRedux /> },\n    { name: 'Flask', badge: <BiLogoFlask /> },\n    { name: 'HTML5', badge: <FaHtml5 /> },\n    { name: 'CSS3', badge: <FaCss3 /> },\n    { name: 'Node', badge: <FaNodeJs /> },\n    { name: 'Express', badge: <SiExpress /> },\n    { name: 'Python', badge: <FaPython /> },\n    { name: 'MongoDB', badge: <BiLogoMongodb /> },\n    { name: 'AWS', badge: <FaAws /> },\n    { name: 'Firebase', badge: <BiLogoFirebase /> },\n    { name: 'Git', badge: <FaGitAlt /> },\n    { name: 'Docker', badge: <FaDocker /> },\n    { name: 'Prisma', badge: <SiPrisma /> },\n    // { name: 'MUI', badge: <SiMui /> },\n    // New General Development Tech Stack Additions\n    { name: 'PostgreSQL', badge: <BiLogoPostgresql /> }, // Relational Database\n    { name: 'Kubernetes', badge: <BiLogoKubernetes /> }, // Container Orchestration\n    // { name: 'GCP', badge: <SiGooglecloud /> }, // General Cloud Provider\n    // Generative AI Tech Stack Additions\n    { name: 'OpenAI', badge: <AiOutlineOpenAI /> },\n    // { name: 'Hugging Face', badge: <SiHuggingface /> },\n    // { name: 'PyTorch', badge: <SiPytorch /> },\n    // { name: 'TensorFlow', badge: <SiTensorflow /> },\n    // { name: 'LangChain', badge: <SiLangchain /> },\n    // { name: 'Apache Airflow', badge: <SiApacheairflow /> }, // MLOps/Data Orchestration for Gen AI pipelines\n    // { name: 'Keras', badge: <SiKeras /> }, // High-level API for neural networks, often with TensorFlow/JAX/PyTorch\n  ]\n\n  return (\n    <Stack gap={4} id=\"home\">\n      <Heading as={'h2'} fontSize={'xl'} color={'brand'}>\n        Tech Stack\n      </Heading>\n      <SimpleGrid columns={{ base: 2, sm: 3 }} gap={4}>\n        {items.map((tech, index) => {\n          return (\n            <Button\n              key={index}\n              variant={'outline'}\n              _hover={{ bg: 'brand.muted' }}\n              color={'brand'}\n              borderColor={'gray.subtel'}\n            >\n              {tech.badge}\n              {tech.name}\n            </Button>\n          )\n        })}\n      </SimpleGrid>\n    </Stack>\n  )\n}\n\nconst Projects = () => {\n  return (\n    <Stack gap={4} id=\"projects\">\n      <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n        Projects\n      </Heading>\n      {projectsData.map((project, index) => {\n        return (\n          <CNLink\n            key={index}\n            href={project.href}\n            borderWidth={'1px'}\n            borderColor={'gray.subtel'}\n            _focus={{\n              textDecoration: 'none',\n              boxShadow: 'none',\n              borderColor: 'brand.emphasized',\n              border: 'none',\n            }}\n            borderRadius={'md'}\n            p={6}\n            _hover={{ textDecoration: 'none', bgColor: 'brand.muted' }}\n            target=\"_blank\"\n          >\n            <Stack alignItems=\"start\">\n              <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n                {project.title}\n              </Heading>\n              <Text color=\"brand.secondary\" fontSize={'sm'}>\n                {project.description}\n              </Text>\n            </Stack>\n          </CNLink>\n        )\n      })}\n    </Stack>\n  )\n}\n\nconst Work = () => {\n  return (\n    <Stack gap={4} id=\"work\">\n      <Heading as={'h2'} fontSize={'2xl'} color={'brand'}>\n        Work\n      </Heading>\n      <Stack\n        gap={5}\n        p={6}\n        borderWidth={'1px'}\n        borderColor={'gray.subtel'}\n        borderRadius={'lg'}\n        separator={<Separator opacity={1} color={'brand'} />}\n      >\n        {worksData.map((work, index) => {\n          return (\n            <Stack gap={4} key={index} direction=\"column\">\n              <Flex justify={'space-between'} alignItems={'end'}>\n                <Heading as=\"h3\" fontSize=\"lg\" color={'brand'} fontWeight=\"bold\" textAlign=\"start\">\n                  {work.company}\n                </Heading>\n                <HStack borderWidth={'1px'} p={2} borderRadius={'lg'} borderColor={'gray.subtel'}>\n                  <FaRegCalendarDays size={14} />\n                  <Text fontSize={'xs'} color={'brand'}>\n                    {work.fromDate} - {work.toDate}\n                  </Text>\n                </HStack>\n              </Flex>\n              <Stack\n                fontSize={'sm'}\n                color={'brand.secondary'}\n                as={'ul'}\n                listStyleType={'disc'}\n                ml={4}\n              >\n                {work.deliverable.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </Stack>\n            </Stack>\n          )\n        })}\n      </Stack>\n    </Stack>\n  )\n}\n\nconst Contact = () => {\n  return (\n    <Stack gap={6} marginBottom={10} id=\"contact\">\n      <Heading as={'h2'} fontSize={{ base: 'xl', md: '2xl' }} color={'brand'}>\n        Contact\n      </Heading>\n      <Box borderWidth={'1px'} p={5} borderRadius={'lg'} borderColor={'gray.subtel'}>\n        <Text textAlign={'center'} fontSize={'sm'} color={'brand.secondary'}>\n          Best way to reach me is through:{' '}\n          <CNLink\n            _hover={{ color: 'brand' }}\n            color={'brand.secondary'}\n            _focus={{ boxShadow: 'none' }}\n            href={siteConfig.contact.emailHref}\n          >\n            {siteConfig.contact.email}\n          </CNLink>\n        </Text>\n      </Box>\n    </Stack>\n  )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}